diff --git a/pom.xml b/pom.xml
index 01df99f22..e084ad1df 100644
--- a/pom.xml
+++ b/pom.xml
@@ -276,7 +276,6 @@
                 <module>ranger-atlas-plugin-shim</module>
                 <module>ranger-kms-plugin-shim</module>
                 <module>ranger-presto-plugin-shim</module>
-                <module>ranger-examples</module>
                 <module>ranger-tools</module>
                 <module>plugin-atlas</module>
                 <module>plugin-schema-registry</module>
@@ -293,15 +292,6 @@
                 <module>distro</module>
             </modules>
         </profile>
-        <profile>
-            <id>ranger-examples</id>
-            <modules>
-                <module>agents-common</module>
-                <module>agents-cred</module>
-                <module>intg</module>
-                <module>ranger-examples</module>
-            </modules>
-        </profile>
         <profile>
             <id>ranger-admin</id>
             <modules>
@@ -571,7 +561,6 @@
                 <module>ranger-solr-plugin-shim</module>
                 <module>ranger-atlas-plugin-shim</module>
                 <module>ranger-kms-plugin-shim</module>
-                <module>ranger-examples</module>
                 <module>ranger-tools</module>
                 <module>plugin-atlas</module>
                 <module>plugin-schema-registry</module>
@@ -656,7 +645,6 @@
                 <module>ranger-atlas-plugin-shim</module>
                 <module>ranger-kms-plugin-shim</module>
                 <module>ranger-presto-plugin-shim</module>
-                <module>ranger-examples</module>
                 <module>ranger-tools</module>
                 <module>plugin-atlas</module>
                 <module>plugin-schema-registry</module>
diff --git a/ranger-examples/.gitignore b/ranger-examples/.gitignore
deleted file mode 100644
index b9c5b0ba7..000000000
--- a/ranger-examples/.gitignore
+++ /dev/null
@@ -1,2 +0,0 @@
-/target/
-.settings/
diff --git a/ranger-examples/README.txt b/ranger-examples/README.txt
deleted file mode 100644
index e4295d4b5..000000000
--- a/ranger-examples/README.txt
+++ /dev/null
@@ -1,74 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-1. Introduction
-
-2. SampleApp
-   A simple application to demonstrate use of pluggable authorization.
-   - IAuthorizer:
-      the authorization interface. Authorizes read/write/execute access to a given file
-   - DefaultAuthorizer:
-      default authorizer implementation, authorizes all accesses
-   - SampleApp:
-      - main application that prompts the user to enter access to authorize in the following format:
-         read filePath user1 userGroup1 userGroup2 userGroup3
-         write filePath user1 userGroup1 userGroup2 userGroup3
-         execute filePath user1 userGroup1 userGroup2 userGroup3
-
-3. SampleApp Plugin
-   - RangerAuthorizer implements IAuthorizer interface and performs authorization using Ranger policies.
-   - For simplicity, uses policies in a HDFS service instance (like cl1_hadoop): which uses 'path' as the resource and supports 'read', 'write' and 'execute' accessTypes
-   - conf/ranger-sampleapp-security.xml: has configurations for plugin, like Ranger Admin URL, name of the service containing policies
-   - conf/ranger-sampleapp-audit.xml: has configurations for plugin audit, like log4j logger name, HDFS folder, DB connection details
-
-4. Build
-   $ mvn clean compile package assembly:assembly
-   $ cd ranger-examples
-   $ mvn clean compile package assembly:assembly
-   # Following files created by the build will be required to setup SampleApp:
-     target/ranger-examples-<version>-sampleapp.tar.gz
-     target/ranger-examples-<version>-sampleapp-plugin.tar.gz
-
-5. Setup SampleApp
-   # Create a empty directory to setup the application
-   $ mkdir /tmp/sampleapp
-   $ cd /tmp/sampleapp
-   $ tar xvfz ranger-examples-<version>-sampleapp.tar.gz
-   # add Ranger authorizer bits
-   $ tar xvfz ranger-examples-<version>-sampleapp-plugin.tar.gz
-   # Review and update properties in conf/ranger-sampleapp-security.xml, especially the following:
-     - ranger.plugin.sampleapp.policy.rest.url
-     - ranger.plugin.sampleapp.service.name
-   # Review and update properties in conf/ranger-sampleapp-audit.xml
-   # Review and update properties in conf/log4j.xml
-
-6. Execute
-   - Use default authorizer i.e. not Ranger:
-     $ cd /tmp/sampleapp
-     $ ./run-sampleapp.sh
-     # At the prompt, enter commands to trigger access authorization, like:
-     command> read filePath user1 userGroup1 userGroup2 userGroup3
-     command> write filePath user1 userGroup1 userGroup2 userGroup3
-     command> execute filePath user1 userGroup1 userGroup2 userGroup3
-
-   - Use Ranger authorizer
-     $ cd /tmp/sampleapp
-     $ ./run-sampleapp.sh ranger-authz
-     # At the prompt, enter commands to trigger access authorization, like:
-     command> read filePath user1 userGroup1 userGroup2 userGroup3
-     command> write filePath user1 userGroup1 userGroup2 userGroup3
-     command> execute filePath user1 userGroup1 userGroup2 userGroup3
-	 # audit logs can be seen in /tmp/ranger_audit.log
diff --git a/ranger-examples/conditions-enrichers/.gitignore b/ranger-examples/conditions-enrichers/.gitignore
deleted file mode 100644
index b83d22266..000000000
--- a/ranger-examples/conditions-enrichers/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/target/
diff --git a/ranger-examples/conditions-enrichers/pom.xml b/ranger-examples/conditions-enrichers/pom.xml
deleted file mode 100644
index 6b0e10be5..000000000
--- a/ranger-examples/conditions-enrichers/pom.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <artifactId>conditions-enrichers</artifactId>
-    <name>Ranger Examples - Conditions and ContextEnrichers</name>
-    <description>Ranger Examples - Conditions and ContextEnrichers</description>
-    <parent>
-        <artifactId>ranger-examples</artifactId>
-        <groupId>org.apache.ranger</groupId>
-        <version>2.2.0</version>
-    </parent>
-    <dependencies>
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.mockito</groupId>
-            <artifactId>mockito-core</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>ranger-plugins-common</artifactId>
-            <version>${project.version}</version>
-        </dependency>
-    </dependencies>
-</project>
diff --git a/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/conditionevaluator/RangerPolicyConditionSampleSimpleMatcher.java b/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/conditionevaluator/RangerPolicyConditionSampleSimpleMatcher.java
deleted file mode 100644
index 6e5d90a96..000000000
--- a/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/conditionevaluator/RangerPolicyConditionSampleSimpleMatcher.java
+++ /dev/null
@@ -1,170 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.plugin.conditionevaluator;
-
-import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.collections.MapUtils;
-import org.apache.commons.io.FilenameUtils;
-import org.apache.commons.lang.StringUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.ranger.plugin.policyengine.RangerAccessRequest;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * This is a sample implementation of a condition Evaluator.  It works in conjunction with the sample context enricher
- * <code>RangerSampleProjectProvider</code>.  This is how it would be specified in the service definition:
-	{
-		...
-		... service definition
-		...
-		"policyConditions": [
-		{
-			"itemId": 1,
-			"name": "user-in-project",
-			"evaluator": "org.apache.ranger.plugin.conditionevaluator.RangerSimpleMatcher",
-			"evaluatorOptions": { CONTEXT_NAME=’PROJECT’},
-			"validationRegEx":"",
-			"validationMessage": "",
-			"uiHint":"",
-			"label": "Project Matcher",
-			"description": "Projects"
-		}
-	 }
- *
- * Name of this class is specified via the "evaluator" of the policy condition definition.  Significant evaluator option
- * for this evaluator is the CONTEXT_NAME which indicates the name under which it would look for value for the condition.
- * It is also use to lookup the condition values specified in the policy.  This example uses CONTEXT_NAME of PROJECT
- * which matches the value under which context is enriched by its companion class <code>RangerSampleProjectProvider</code>.
- *
- * Note that the same Condition Evaluator can be used to process Context enrichment done by <code>RangerSampleCountryProvider</code>
- * provided the CONTEXT_NAME evaluator option is set to COUNTRY which is same as the value used by its companion Context
- * Enricher <code>RangerSampleCountryProvider</code>.  Which serves as an example of how a single Condition Evaluator
- * implementation can be used to model multiple policy conditions.
- *
- * For matching context value against policy values it uses <code>FilenameUtils.wildcardMatch()</code> which allows policy authors
- * flexibility to specify policy conditions using wildcards.  Take a look at
- * {@link org.apache.ranger.plugin.conditionevaluator.RangerSampleSimpleMatcherTest#testIsMatched_happyPath() testIsMatched_happyPath}
- * test for examples of what sorts of matching is afforded by this use.
- *
- */
-public class RangerPolicyConditionSampleSimpleMatcher extends RangerAbstractConditionEvaluator {
-
-	private static final Log LOG = LogFactory.getLog(RangerPolicyConditionSampleSimpleMatcher.class);
-
-	public static final String CONTEXT_NAME = "CONTEXT_NAME";
-
-	private boolean _allowAny = false;
-	private String _contextName = null;
-	private List<String> _values = new ArrayList<String>();
-
-	@Override
-	public void init() {
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerPolicyConditionSampleSimpleMatcher.init(" + condition + ")");
-		}
-
-		super.init();
-
-		if (condition == null) {
-			LOG.debug("init: null policy condition! Will match always!");
-			_allowAny = true;
-		} else if (conditionDef == null) {
-			LOG.debug("init: null policy condition definition! Will match always!");
-			_allowAny = true;
-		} else if (CollectionUtils.isEmpty(condition.getValues())) {
-			LOG.debug("init: empty conditions collection on policy condition!  Will match always!");
-			_allowAny = true;
-		} else if (MapUtils.isEmpty(conditionDef.getEvaluatorOptions())) {
-			LOG.debug("init: Evaluator options were empty.  Can't determine what value to use from context.  Will match always.");
-			_allowAny = true;
-		} else if (StringUtils.isEmpty(conditionDef.getEvaluatorOptions().get(CONTEXT_NAME))) {
-			LOG.debug("init: CONTEXT_NAME is not specified in evaluator options.  Can't determine what value to use from context.  Will match always.");
-			_allowAny = true;
-		} else {
-			_contextName = conditionDef.getEvaluatorOptions().get(CONTEXT_NAME);
-			for (String value : condition.getValues()) {
-				_values.add(value);
-			}
-		}
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerPolicyConditionSampleSimpleMatcher.init(" + condition + "): values[" + _values + "]");
-		}
-	}
-
-	@Override
-	public boolean isMatched(RangerAccessRequest request) {
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerPolicyConditionSampleSimpleMatcher.isMatched(" + request + ")");
-		}
-
-		boolean matched = false;
-
-		if (_allowAny) {
-			matched = true;
-		} else {
-			String requestValue = extractValue(request, _contextName);
-			if (StringUtils.isNotBlank(requestValue)) {
-				for (String policyValue : _values) {
-					if (FilenameUtils.wildcardMatch(requestValue, policyValue)) {
-						matched = true;
-						break;
-					}
-				}
-			}
-		}
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerPolicyConditionSampleSimpleMatcher.isMatched(" + request+ "): " + matched);
-		}
-
-		return matched;
-	}
-
-	String extractValue(final RangerAccessRequest request, String key) {
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerPolicyConditionSampleSimpleMatcher.extractValue(" + request+ ")");
-		}
-
-		String value = null;
-		if (request == null) {
-			LOG.debug("isMatched: Unexpected: null request.  Returning null!");
-		} else if (request.getContext() == null) {
-			LOG.debug("isMatched: Context map of request is null.  Ok. Returning null!");
-		} else if (CollectionUtils.isEmpty(request.getContext().entrySet())) {
-			LOG.debug("isMatched: Missing context on request.  Ok. Condition isn't applicable.  Returning null!");
-		} else if (!request.getContext().containsKey(key)) {
-			if (LOG.isDebugEnabled()) {
-				LOG.debug("isMatched: Unexpected: Context did not have data for condition[" + key + "]. Returning null!");
-			}
-		} else {
-			value = (String)request.getContext().get(key);
-		}
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerPolicyConditionSampleSimpleMatcher.extractValue(" + request+ "): " + value);
-		}
-		return value;
-	}
-}
diff --git a/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/conditionevaluator/RangerSampleSimpleMatcher.java b/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/conditionevaluator/RangerSampleSimpleMatcher.java
deleted file mode 100644
index 83ef70ea2..000000000
--- a/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/conditionevaluator/RangerSampleSimpleMatcher.java
+++ /dev/null
@@ -1,170 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.plugin.conditionevaluator;
-
-import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.collections.MapUtils;
-import org.apache.commons.io.FilenameUtils;
-import org.apache.commons.lang.StringUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.ranger.plugin.policyengine.RangerAccessRequest;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * This is a sample implementation of a condition Evaluator.  It works in conjunction with the sample context enricher
- * <code>RangerSampleProjectProvider</code>.  This is how it would be specified in the service definition:
- 	{
-		...
-		... service definition
-		...
-		"policyConditions": [
-		{
-			"itemId": 1,
-			"name": "user-in-project",
-			"evaluator": "org.apache.ranger.plugin.conditionevaluator.RangerSimpleMatcher",
-			"evaluatorOptions": { CONTEXT_NAME=’PROJECT’},
-			"validationRegEx":"",
-			"validationMessage": "",
-			"uiHint":"",
-			"label": "Project Matcher",
-			"description": "Projects"
-		}
- 	 }
- *
- * Name of this class is specified via the "evaluator" of the policy condition definition.  Significant evaluator option
- * for this evaluator is the CONTEXT_NAME which indicates the name under which it would look for value for the condition.
- * It is also use to lookup the condition values specified in the policy.  This example uses CONTEXT_NAME of PROJECT
- * which matches the value under which context is enriched by its companion class <code>RangerSampleProjectProvider</code>.
- *
- * Note that the same Condition Evaluator can be used to process Context enrichment done by <code>RangerSampleCountryProvider</code>
- * provided the CONTEXT_NAME evaluator option is set to COUNTRY which is same as the value used by its companion Context
- * Enricher <code>RangerSampleCountryProvider</code>.  Which serves as an example of how a single Condition Evaluator
- * implementation can be used to model multiple policy conditions.
- *
- * For matching context value against policy values it uses <code>FilenameUtils.wildcardMatch()</code> which allows policy authors
- * flexibility to specify policy conditions using wildcards.  Take a look at
- * {@link org.apache.ranger.plugin.conditionevaluator.RangerSampleSimpleMatcherTest#testIsMatched_happyPath() testIsMatched_happyPath}
- * test for examples of what sorts of matching is afforded by this use.
- *
- */
-public class RangerSampleSimpleMatcher extends RangerAbstractConditionEvaluator {
-
-	private static final Log LOG = LogFactory.getLog(RangerSampleSimpleMatcher.class);
-
-	public static final String CONTEXT_NAME = "CONTEXT_NAME";
-
-	private boolean _allowAny = false;
-	private String _contextName = null;
-	private List<String> _values = new ArrayList<String>();
-	
-	@Override
-	public void init() {
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerSampleSimpleMatcher.init(" + condition + ")");
-		}
-
-		super.init();
-
-		if (condition == null) {
-			LOG.debug("init: null policy condition! Will match always!");
-			_allowAny = true;
-		} else if (conditionDef == null) {
-			LOG.debug("init: null policy condition definition! Will match always!");
-			_allowAny = true;
-		} else if (CollectionUtils.isEmpty(condition.getValues())) {
-			LOG.debug("init: empty conditions collection on policy condition!  Will match always!");
-			_allowAny = true;
-		} else if (MapUtils.isEmpty(conditionDef.getEvaluatorOptions())) {
-			LOG.debug("init: Evaluator options were empty.  Can't determine what value to use from context.  Will match always.");
-			_allowAny = true;
-		} else if (StringUtils.isEmpty(conditionDef.getEvaluatorOptions().get(CONTEXT_NAME))) {
-			LOG.debug("init: CONTEXT_NAME is not specified in evaluator options.  Can't determine what value to use from context.  Will match always.");
-			_allowAny = true;
-		} else {
-			_contextName = conditionDef.getEvaluatorOptions().get(CONTEXT_NAME);
-			for (String value : condition.getValues()) {
-				_values.add(value);
-			}
-		}
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerSampleSimpleMatcher.init(" + condition + "): values[" + _values + "]");
-		}
-	}
-
-	@Override
-	public boolean isMatched(RangerAccessRequest request) {
-		
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerSampleSimpleMatcher.isMatched(" + request + ")");
-		}
-
-		boolean matched = false;
-
-		if (_allowAny) {
-			matched = true;
-		} else {
-			String requestValue = extractValue(request, _contextName);
-			if (StringUtils.isNotBlank(requestValue)) {
-				for (String policyValue : _values) {
-					if (FilenameUtils.wildcardMatch(requestValue, policyValue)) {
-						matched = true;
-						break;
-					}
-				}
-			}
-		}
-		
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerSampleSimpleMatcher.isMatched(" + request+ "): " + matched);
-		}
-
-		return matched;
-	}
-
-	String extractValue(final RangerAccessRequest request, String key) {
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerSampleSimpleMatcher.extractValue(" + request+ ")");
-		}
-
-		String value = null;
-		if (request == null) {
-			LOG.debug("isMatched: Unexpected: null request.  Returning null!");
-		} else if (request.getContext() == null) {
-			LOG.debug("isMatched: Context map of request is null.  Ok. Returning null!");
-		} else if (CollectionUtils.isEmpty(request.getContext().entrySet())) {
-			LOG.debug("isMatched: Missing context on request.  Ok. Condition isn't applicable.  Returning null!");
-		} else if (!request.getContext().containsKey(key)) {
-			if (LOG.isDebugEnabled()) {
-				LOG.debug("isMatched: Unexpected: Context did not have data for condition[" + key + "]. Returning null!");
-			}
-		} else {
-			value = (String)request.getContext().get(key);
-		}
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerSampleSimpleMatcher.extractValue(" + request+ "): " + value);
-		}
-		return value;
-	}
-}
diff --git a/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/contextenricher/RangerSampleCountryProvider.java b/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/contextenricher/RangerSampleCountryProvider.java
deleted file mode 100644
index e0823e42a..000000000
--- a/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/contextenricher/RangerSampleCountryProvider.java
+++ /dev/null
@@ -1,105 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.plugin.contextenricher;
-
-import java.util.Map;
-import java.util.Properties;
-
-import org.apache.commons.lang.StringUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.ranger.plugin.policyengine.RangerAccessRequest;
-
-/**
- * This is a sample implementation of a Context Enricher.  It works in conjunction with a sample Condition Evaluator
- * <code>RangerSampleSimpleMatcher</code>. It This is how it would be used in service definition:
-	{
-		... service def
-		...
-		"contextEnrichers": [
-		{
-			"itemId": 1, "name": "country-provider",
-			"enricher": "org.apache.ranger.plugin.contextenricher.RangerSampleCountryProvider",
-			"enricherOptions": { "contextName" : "COUNTRY", "dataFile":"/etc/ranger/data/userCountry.txt"}
-		}
-		...
-	}
-
- contextName: is used to specify the name under which the enricher would push value into context.
-	 For purposes of this example the default value of this parameter, if unspecified is COUNTRY.  This default
-	 can be seen specified in <code>init()</code>.
- dataFile: is the file which contains the lookup data that this particular enricher would use to
-	 ascertain which value to insert into the context.  For purposes of this example the default value of
-	 this parameter, if unspecified is /etc/ranger/data/userCountry.txt.  This default can be seen specified
-	 in <code>init()</code>.  Format of lookup data is in the form of standard java properties list.
-
- @see <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Properties.html#load(java.io.Reader)">Java Properties List</a>
- *
- * This Context Enricher is almost identical to another sample enricher <code>RangerSampleProjectProvider</code>.
- */
-public class RangerSampleCountryProvider extends RangerAbstractContextEnricher {
-	private static final Log LOG = LogFactory.getLog(RangerSampleCountryProvider.class);
-
-	private String     contextName    = "COUNTRY";
-	private Properties userCountryMap = null;
-	
-	@Override
-	public void init() {
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerSampleCountryProvider.init(" + enricherDef + ")");
-		}
-		
-		super.init();
-		
-		contextName = getOption("contextName", "COUNTRY");
-
-		String dataFile = getOption("dataFile", "/etc/ranger/data/userCountry.txt");
-
-		userCountryMap = readProperties(dataFile);
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerSampleCountryProvider.init(" + enricherDef + ")");
-		}
-	}
-
-	@Override
-	public void enrich(RangerAccessRequest request) {
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerSampleCountryProvider.enrich(" + request + ")");
-		}
-		
-		if(request != null && userCountryMap != null) {
-			Map<String, Object> context = request.getContext();
-			String              country = userCountryMap.getProperty(request.getUser());
-	
-			if(context != null && !StringUtils.isEmpty(country)) {
-				request.getContext().put(contextName, country);
-			} else {
-				if(LOG.isDebugEnabled()) {
-					LOG.debug("RangerSampleCountryProvider.enrich(): skipping due to unavailable context or country. context=" + context + "; country=" + country);
-				}
-			}
-		}
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerSampleCountryProvider.enrich(" + request + ")");
-		}
-	}
-}
diff --git a/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/contextenricher/RangerSampleProjectProvider.java b/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/contextenricher/RangerSampleProjectProvider.java
deleted file mode 100644
index be17e837a..000000000
--- a/ranger-examples/conditions-enrichers/src/main/java/org/apache/ranger/plugin/contextenricher/RangerSampleProjectProvider.java
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.plugin.contextenricher;
-
-import org.apache.commons.lang.StringUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.ranger.plugin.policyengine.RangerAccessRequest;
-
-import java.util.Map;
-import java.util.Properties;
-
-/**
- * This is a sample implementation of a Context Enricher.  It works in conjunction with a sample Condition Evaluator
- * <code>RangerSampleSimpleMatcher</code>. It This is how it would be used in service definition:
- {
-    ... service def
-    ...
-    "contextEnrichers": [
-		{
-		 "itemId": 1, "name": "project-provider",
-		 "enricher": "org.apache.ranger.plugin.contextenricher.RangerSampleProjectProvider",
-		 "enricherOptions": { "contextName" : "PROJECT", "dataFile":"/etc/ranger/data/userProject.txt"}
-		}
- 	...
- }
-
- contextName: is used to specify the name under which the enricher would push value into context.
-           For purposes of this example the default value of this parameter, if unspecified is PROJECT.  This default
-           can be seen specified in <code>init()</code>.
- dataFile: is the file which contains the lookup data that this particular enricher would use to
-           ascertain which value to insert into the context.  For purposes of this example the default value of
-           this parameter, if unspecified is /etc/ranger/data/userProject.txt.  This default can be seen specified
-           in <code>init()</code>.  Format of lookup data is in the form of standard java properties list.
-
- @see <a href="http://docs.oracle.com/javase/6/docs/api/java/util/Properties.html#load(java.io.Reader)">Java Properties List</a>
- */
-public class RangerSampleProjectProvider extends RangerAbstractContextEnricher {
-	private static final Log LOG = LogFactory.getLog(RangerSampleProjectProvider.class);
-
-	private String     contextName    = "PROJECT";
-	private Properties userProjectMap = null;
-	
-	@Override
-	public void init() {
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerSampleProjectProvider.init(" + enricherDef + ")");
-		}
-		
-		super.init();
-		
-		contextName = getOption("contextName", "PROJECT");
-
-		String dataFile = getOption("dataFile", "/etc/ranger/data/userProject.txt");
-
-		userProjectMap = readProperties(dataFile);
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerSampleProjectProvider.init(" + enricherDef + ")");
-		}
-	}
-
-	@Override
-	public void enrich(RangerAccessRequest request) {
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerSampleProjectProvider.enrich(" + request + ")");
-		}
-		
-		if(request != null && userProjectMap != null && request.getUser() != null) {
-			Map<String, Object> context = request.getContext();
-			String              project = userProjectMap.getProperty(request.getUser());
-	
-			if(context != null && !StringUtils.isEmpty(project)) {
-				request.getContext().put(contextName, project);
-			} else {
-				if(LOG.isDebugEnabled()) {
-					LOG.debug("RangerSampleProjectProvider.enrich(): skipping due to unavailable context or project. context=" + context + "; project=" + project);
-				}
-			}
-		}
-
-		if(LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerSampleProjectProvider.enrich(" + request + ")");
-		}
-	}
-}
diff --git a/ranger-examples/conditions-enrichers/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerSampleSimpleMatcherTest.java b/ranger-examples/conditions-enrichers/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerSampleSimpleMatcherTest.java
deleted file mode 100644
index 22e298df5..000000000
--- a/ranger-examples/conditions-enrichers/src/test/java/org/apache/ranger/plugin/conditionevaluator/RangerSampleSimpleMatcherTest.java
+++ /dev/null
@@ -1,139 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.plugin.conditionevaluator;
-
-
-import org.apache.ranger.plugin.model.RangerPolicy.RangerPolicyItemCondition;
-import org.apache.ranger.plugin.model.RangerServiceDef.RangerPolicyConditionDef;
-import org.apache.ranger.plugin.policyengine.RangerAccessRequest;
-import org.junit.Assert;
-import org.junit.Test;
-import org.mockito.Mockito;
-
-import java.util.*;
-
-public class RangerSampleSimpleMatcherTest {
-
-	final Map<String, String> _conditionOptions = new HashMap<String, String>();
-
-	{
-		_conditionOptions.put(RangerSampleSimpleMatcher.CONTEXT_NAME, RangerSampleSimpleMatcher.CONTEXT_NAME);
-	}
-
-	@Test
-	public void testIsMatched_happyPath() {
-		// this documents some unexpected behavior of the ip matcher
-		RangerSampleSimpleMatcher ipMatcher = createMatcher(new String[]{"US", "C*"} );
-		Assert.assertTrue(ipMatcher.isMatched(createRequest("US")));
-		Assert.assertTrue(ipMatcher.isMatched(createRequest("CA")));
-		Assert.assertTrue(ipMatcher.isMatched(createRequest("C---")));
-		Assert.assertFalse(ipMatcher.isMatched(createRequest(" US ")));
-		Assert.assertFalse(ipMatcher.isMatched(createRequest("Us")));
-		Assert.assertFalse(ipMatcher.isMatched(createRequest("ca")));
-	}
-	
-	@Test
-	public void test_firewallings() {
-		
-		// create a request for some policyValue, say, country and use it to match against matcher initialized with all sorts of bad data
-		RangerAccessRequest request = createRequest("AB");
-
-		RangerSampleSimpleMatcher matcher = new RangerSampleSimpleMatcher();
-		// Matcher initialized with null policy should behave sensibly!  It matches everything!
-		matcher.setConditionDef(null);
-		matcher.setPolicyItemCondition(null);
-		matcher.init();
-		Assert.assertTrue(matcher.isMatched(request));
-		
-		RangerPolicyItemCondition policyItemCondition = Mockito.mock(RangerPolicyItemCondition.class);
-		matcher.setConditionDef(null);
-		matcher.setPolicyItemCondition(policyItemCondition);
-		matcher.init();
-		Assert.assertTrue(matcher.isMatched(request));
-		
-		RangerPolicyConditionDef conditionDef = Mockito.mock(RangerPolicyConditionDef.class);
-		matcher.setConditionDef(conditionDef);
-		matcher.setPolicyItemCondition(null);
-		matcher.init();
-		Assert.assertTrue(matcher.isMatched(request));
-		
-		// so should a policy item condition with initialized with null list of values
-		Mockito.when(policyItemCondition.getValues()).thenReturn(null);
-		matcher.setConditionDef(conditionDef);
-		matcher.setPolicyItemCondition(policyItemCondition);
-		matcher.init();
-		Assert.assertTrue(matcher.isMatched(request));
-
-		// not null item condition with empty condition list
-		List<String> values = new ArrayList<String>();
-		Mockito.when(policyItemCondition.getValues()).thenReturn(values);
-		matcher.setConditionDef(conditionDef);
-		matcher.setPolicyItemCondition(policyItemCondition);
-		matcher.init();
-		Assert.assertTrue(matcher.isMatched(request));
-
-		// values as sensible items in it, however, the conditionDef has null evaluator option, so that too suppresses any check
-		values.add("AB");
-		Mockito.when(policyItemCondition.getValues()).thenReturn(values);
-		Mockito.when(conditionDef.getEvaluatorOptions()).thenReturn(null);
-		matcher.setConditionDef(conditionDef);
-		matcher.setPolicyItemCondition(policyItemCondition);
-		matcher.init();
-		Assert.assertTrue(matcher.isMatched(request));
-
-		// If evaluator option on the condition def is non-null then it starts to evaluate for real
-		Mockito.when(conditionDef.getEvaluatorOptions()).thenReturn(_conditionOptions);
-		matcher.setConditionDef(conditionDef);
-		matcher.setPolicyItemCondition(policyItemCondition);
-		matcher.init();
-		Assert.assertTrue(matcher.isMatched(request));
-	}
-	
-	RangerSampleSimpleMatcher createMatcher(String[] ipArray) {
-		RangerSampleSimpleMatcher matcher = new RangerSampleSimpleMatcher();
-
-		if (ipArray == null) {
-			matcher.setConditionDef(null);
-			matcher.setPolicyItemCondition(null);
-			matcher.init();
-		} else {
-			RangerPolicyItemCondition condition = Mockito.mock(RangerPolicyItemCondition.class);
-			List<String> addresses = Arrays.asList(ipArray);
-			Mockito.when(condition.getValues()).thenReturn(addresses);
-			
-			RangerPolicyConditionDef conditionDef = Mockito.mock(RangerPolicyConditionDef.class);
-
-			Mockito.when(conditionDef.getEvaluatorOptions()).thenReturn(_conditionOptions);
-			matcher.setConditionDef(conditionDef);
-			matcher.setPolicyItemCondition(condition);
-			matcher.init();
-		}
-		
-		return matcher;
-	}
-	
-	RangerAccessRequest createRequest(String value) {
-		Map<String, Object> context = new HashMap<String, Object>();
-		context.put(RangerSampleSimpleMatcher.CONTEXT_NAME, value);
-		RangerAccessRequest request = Mockito.mock(RangerAccessRequest.class);
-		Mockito.when(request.getContext()).thenReturn(context);
-		return request;
-	}
-}
diff --git a/ranger-examples/dev-support/findbugsIncludeFile.xml b/ranger-examples/dev-support/findbugsIncludeFile.xml
deleted file mode 100644
index 8623906bd..000000000
--- a/ranger-examples/dev-support/findbugsIncludeFile.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<!--
-   Licensed to the Apache Software Foundation (ASF) under one or more
-   contributor license agreements.  See the NOTICE file distributed with
-   this work for additional information regarding copyright ownership.
-   The ASF licenses this file to You under the Apache License, Version 2.0
-   (the "License"); you may not use this file except in compliance with
-   the License.  You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
--->
-<FindBugsFilter>
-  <!--
-  	For now, lets find only critical bugs from static code analyzer
-  -->
-  <Match>
-    <Bug Rank="1" />
-  </Match>
-
-</FindBugsFilter>
diff --git a/ranger-examples/dev-support/ranger-pmd-ruleset.xml b/ranger-examples/dev-support/ranger-pmd-ruleset.xml
deleted file mode 100644
index 96f566a8b..000000000
--- a/ranger-examples/dev-support/ranger-pmd-ruleset.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one
-  or more contributor license agreements. See the NOTICE file
-  distributed with this work for additional information
-  regarding copyright ownership. The ASF licenses this file
-  to you under the Apache License, Version 2.0 (the
-  "License"); you may not use this file except in compliance
-  with the License. You may obtain a copy of the License at
-
-  http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing,
-  software distributed under the License is distributed on an
-  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-  KIND, either express or implied. See the License for the
-  specific language governing permissions and limitations
-  under the License.
--->
-<ruleset name="ranger-pmd" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
-  <description>
-     Apache Ranger - PMD rule set
-  </description>
-
-  <rule ref="rulesets/java/basic.xml">
-	<exclude name="AvoidBranchingStatementAsLastInLoop" />
-	<exclude name="AvoidThreadGroup" />
-	<exclude name="AvoidUsingHardCodedIP" />
-	<exclude name="ClassCastExceptionWithToArray" />
-	<exclude name="CollapsibleIfStatements" />
-	<exclude name="DoubleCheckedLocking" />
-	<exclude name="ExtendsObject" />
-	<exclude name="OverrideBothEqualsAndHashcode" />
-  </rule>
-  <rule ref="rulesets/java/unusedcode.xml">
-	<exclude name="UnusedLocalVariable" />
-	<exclude name="UnusedPrivateField" />
-	<exclude name="UnusedPrivateMethod" />
-  </rule>
-  <rule ref="rulesets/java/imports.xml" />
-  <rule ref="rulesets/java/braces.xml">
-	<exclude name="ForLoopsMustUseBraces" />
-	<exclude name="IfElseStmtsMustUseBraces" />
-	<exclude name="IfStmtsMustUseBraces" />
-  </rule>
-  <rule ref="rulesets/java/empty.xml">
-	<exclude name="EmptyCatchBlock" />
-	<exclude name="EmptyIfStmt" />
-	<exclude name="EmptyStatementNotInLoop" />
-	<exclude name="EmptyWhileStmt" />
-  </rule>
-  <rule ref="rulesets/java/migrating.xml" />
-  <rule ref="rulesets/java/unnecessary.xml">
-	<exclude name="UselessParentheses" />
-  </rule>
-
-</ruleset>
diff --git a/ranger-examples/distro/.gitignore b/ranger-examples/distro/.gitignore
deleted file mode 100644
index 5a3a67338..000000000
--- a/ranger-examples/distro/.gitignore
+++ /dev/null
@@ -1,6 +0,0 @@
-/target/
-/bin/
-/target
-.settings/
-.pydevproject
-*.log
diff --git a/ranger-examples/distro/pom.xml b/ranger-examples/distro/pom.xml
deleted file mode 100644
index a7ee04455..000000000
--- a/ranger-examples/distro/pom.xml
+++ /dev/null
@@ -1,76 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-
-    <artifactId>ranger-examples-distro</artifactId>
-    <name>Apache Ranger Examples Distribution</name>
-    <description>Apache Ranger Examples Distribution</description>
-    <parent>
-        <groupId>org.apache.ranger</groupId>
-        <artifactId>ranger-examples</artifactId>
-        <version>2.2.0</version>
-        <relativePath>..</relativePath>
-    </parent>
-
-    <profiles>
-        <profile>
-            <id>all</id>
-            <activation>
-                <activeByDefault>true</activeByDefault>
-            </activation>
-            <build>
-                <plugins>
-                    <plugin>
-                        <artifactId>maven-assembly-plugin</artifactId>
-                        <version>${assembly.plugin.version}</version>
-                        <configuration>
-                          <finalName>ranger-examples-${project.version}</finalName>
-                          <outputDirectory>../target</outputDirectory>
-                        </configuration>
-                        <executions>
-                            <execution>
-                                <goals>
-                                    <goal>single</goal>
-                                </goals>
-                                <phase>package</phase>
-                                <configuration>
-                                    <skipAssembly>false</skipAssembly>
-                                    <descriptors>
-                                        <descriptor>src/main/assembly/sampleapp.xml</descriptor>
-                                        <descriptor>src/main/assembly/plugin-sampleapp.xml</descriptor>
-                                        <descriptor>src/main/assembly/sample-client.xml</descriptor>
-                                    </descriptors>
-                                </configuration>
-                            </execution>
-                        </executions>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
-    </profiles>
-
-    <!--Add a dependency here to ensure this module is the final one built-->
-    <dependencies>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>sample-client</artifactId>
-            <version>${project.version}</version>
-        </dependency>
-    </dependencies>
-</project>
diff --git a/ranger-examples/distro/src/main/assembly/plugin-sampleapp.xml b/ranger-examples/distro/src/main/assembly/plugin-sampleapp.xml
deleted file mode 100644
index bbc38e5d7..000000000
--- a/ranger-examples/distro/src/main/assembly/plugin-sampleapp.xml
+++ /dev/null
@@ -1,70 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<assembly>
-  <id>sampleapp-plugin</id>
-  <formats>
-     <format>tar.gz</format>
-  </formats>
-  <baseDirectory>${project.name}-${project.version}-ranger-sampleapp-plugin</baseDirectory>
-  <includeBaseDirectory>false</includeBaseDirectory>
-  <moduleSets>
-    <moduleSet>
-     <useAllReactorProjects>true</useAllReactorProjects>
-     <includes>
-       <include>org.apache.ranger:ranger-sampleapp-plugin</include>
-     </includes>
-     <binaries>
-        <includeDependencies>false</includeDependencies>
-        <outputDirectory>lib/ranger-sampleapp-plugin-impl</outputDirectory>
-        <includes>
-            <include>org.apache.ranger:ranger-plugins-common</include>
-            <include>org.apache.ranger:ranger-plugins-audit</include>
-            <include>org.apache.httpcomponents:httpmime:jar:${httpcomponent.httpmime.version}</include>
-            <include>org.noggit:noggit:jar:${noggit.version}</include>
-            <include>org.apache.hadoop:hadoop-common:jar:${hadoop.version}</include>
-            <include>org.apache.hadoop:hadoop-auth:jar:${hadoop.version}</include>
-            <include>commons-collections:commons-collections</include>
-            <include>commons-configuration:commons-configuration:jar:${commons.configuration.version}</include>
-            <include>commons-logging:commons-logging:jar:${commons.logging.version}</include>
-            <include>commons-io:commons-io:jar:${commons.io.version}</include>
-            <include>commons-lang:commons-lang:jar:${commons.lang.version}</include>
-            <include>com.google.guava:guava:jar:${google.guava.version}</include>
-            <include>org.codehaus.jackson:jackson-jaxrs:jar:${codehaus.jackson.storm.version}</include>
-            <include>org.codehaus.jackson:jackson-core-asl:jar:${codehaus.jackson.storm.version}</include>
-            <include>org.codehaus.jackson:jackson-mapper-asl:jar:${codehaus.jackson.storm.version}</include>
-            <include>org.codehaus.jackson:jackson-xc:jar:${codehaus.jackson.storm.version}</include>
-            <include>org.slf4j:slf4j-api</include>
-            <include>log4j:log4j</include>
-            <include>com.sun.jersey:jersey-bundle</include>
-            <include>com.google.code.gson:gson</include>
-        </includes>
-        <unpack>false</unpack>
-        <directoryMode>755</directoryMode>
-        <fileMode>644</fileMode>
-     </binaries>
-    </moduleSet>
-   </moduleSets>
-
-   <fileSets>
-    <fileSet>
-        <outputDirectory>conf</outputDirectory>
-        <directory>plugin-sampleapp/conf</directory>
-        <fileMode>644</fileMode>
-    </fileSet>
-   </fileSets>
-</assembly>
diff --git a/ranger-examples/distro/src/main/assembly/sample-client.xml b/ranger-examples/distro/src/main/assembly/sample-client.xml
deleted file mode 100644
index 49aac2142..000000000
--- a/ranger-examples/distro/src/main/assembly/sample-client.xml
+++ /dev/null
@@ -1,119 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<assembly>
-    <id>sample-client</id>
-    <formats>
-        <format>tar.gz</format>
-    </formats>
-    <baseDirectory>${project.name}-${project.version}-sample-client</baseDirectory>
-    <includeBaseDirectory>false</includeBaseDirectory>
-    <moduleSets>
-        <moduleSet>
-            <useAllReactorProjects>true</useAllReactorProjects>
-            <includes>
-                <include>org.apache.ranger:sample-client</include>
-                <include>org.apache.ranger:ranger-intg</include>
-                <include>org.apache.ranger:ranger-plugins-common</include>
-                <include>org.apache.ranger:ranger-plugins-cred</include>
-            </includes>
-            <binaries>
-                <outputDirectory>lib</outputDirectory>
-                <includeDependencies>true</includeDependencies>
-                <unpack>false</unpack>
-                <directoryMode>755</directoryMode>
-                <fileMode>644</fileMode>
-                <includes>
-                    <include>commons-cli:commons-cli</include>
-                    <include>commons-logging:commons-logging:jar:${commons.logging.version}</include>
-                    <include>commons-lang:commons-lang</include>
-                    <include>com.google.code.gson:gson</include>
-                    <include>org.slf4j:slf4j-api:jar:${slf4j-api.version}</include>
-                    <include>org.slf4j:slf4j-log4j12</include>
-                    <include>log4j:log4j</include>
-                    <include>org.apache.commons:commons-configuration2:jar:${commons.configuration.version}</include>
-                    <include>org.apache.hadoop:hadoop-common:jar:${hadoop.version}</include>
-                    <include>org.apache.hadoop:hadoop-auth:jar:${hadoop.version}</include>
-                    <include>commons-collections:commons-collections</include>
-                    <include>com.sun.jersey:jersey-bundle</include>
-                    <include>commons-io:commons-io</include>
-                    <include>com.google.guava:guava:jar:${google.guava.version}</include>
-                    <include>org.apache.httpcomponents:httpmime:jar:${httpcomponents.httpmime.version}</include>
-                    <include>org.noggit:noggit:jar:${noggit.version}</include>
-                    <include>org.codehaus.jackson:jackson-core-asl</include>
-                    <include>org.codehaus.jackson:jackson-jaxrs</include>
-                    <include>org.codehaus.jackson:jackson-mapper-asl</include>
-                    <include>org.codehaus.jackson:jackson-xc</include>
-                    <include>org.apache.ranger:ranger-plugins-audit</include>
-                    <include>com.kstruct:gethostname4j:jar:${kstruct.gethostname4j.version}</include>
-                    <include>net.java.dev.jna:jna:jar:${jna.version}</include>
-                    <include>net.java.dev.jna:jna-platform:jar:${jna-platform.version}</include>
-                    <include>com.fasterxml.woodstox:woodstox-core:jar:${fasterxml.woodstox.version}</include>
-                    <include>org.codehaus.woodstox:stax2-api:jar:${codehaus.woodstox.stax2api.version}</include>
-                </includes>
-            </binaries>
-        </moduleSet>
-    </moduleSets>
-
-    <fileSets>
-        <fileSet>
-            <outputDirectory></outputDirectory>
-            <directory>${project.parent.basedir}/sample-client/scripts</directory>
-            <includes>
-                <include>*.sh</include>
-                <include>*.py</include>
-            </includes>
-            <fileMode>755</fileMode>
-        </fileSet>
-        <fileSet>
-            <outputDirectory></outputDirectory>
-            <directory>${project.parent.basedir}/sample-client/conf</directory>
-            <includes>
-                <include>*.properties</include>
-            </includes>
-            <fileMode>755</fileMode>
-        </fileSet>
-        <fileSet>
-            <directoryMode>755</directoryMode>
-            <fileMode>644</fileMode>
-            <outputDirectory>lib</outputDirectory>
-            <directory>../sample-client/src/main/resources</directory>
-            <includes>
-                <include>*.properties</include>
-            </includes>
-        </fileSet>
-        <fileSet>
-            <outputDirectory>venv/pylib</outputDirectory>
-            <directory>../../intg/src/main/python</directory>
-        </fileSet>
-        <fileSet>
-            <outputDirectory>venv/resources</outputDirectory>
-            <directory>../../intg/src/main/resources</directory>
-        </fileSet>
-        <fileSet>
-            <outputDirectory>venv/pylib</outputDirectory>
-            <directory>../sample-client/src/main/python</directory>
-            <includes>
-                <include>sample_client.py</include>
-            </includes>
-        </fileSet>
-        <fileSet>
-            <outputDirectory>venv</outputDirectory>
-            <directory>../sample-client/venv</directory>
-        </fileSet>
-    </fileSets>
-</assembly>
diff --git a/ranger-examples/distro/src/main/assembly/sampleapp.xml b/ranger-examples/distro/src/main/assembly/sampleapp.xml
deleted file mode 100644
index 3e927d2b9..000000000
--- a/ranger-examples/distro/src/main/assembly/sampleapp.xml
+++ /dev/null
@@ -1,56 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<assembly>
-  <id>sampleapp</id>
-  <formats>
-     <format>tar.gz</format>
-  </formats>
-  <baseDirectory>${project.name}-${project.version}-sampleapp</baseDirectory>
-  <includeBaseDirectory>false</includeBaseDirectory>
-  <moduleSets>
-    <moduleSet>
-     <useAllReactorProjects>true</useAllReactorProjects>
-     <includes>
-       <include>org.apache.ranger:sampleapp</include>
-     </includes>
-     <binaries>
-        <outputDirectory>lib</outputDirectory>
-        <includeDependencies>false</includeDependencies>
-        <unpack>false</unpack>
-        <directoryMode>755</directoryMode>
-        <fileMode>644</fileMode>
-     </binaries>
-    </moduleSet>
-   </moduleSets>
-
-   <fileSets>
-    <fileSet>
-        <outputDirectory></outputDirectory>
-        <directory>sampleapp/scripts</directory>
-		<includes>
-			<include>*.sh</include>
-		</includes>
-        <fileMode>755</fileMode>
-    </fileSet>
-    <fileSet>
-        <outputDirectory>conf</outputDirectory>
-        <directory>sampleapp/conf</directory>
-        <fileMode>644</fileMode>
-    </fileSet>
-   </fileSets>
-</assembly>
diff --git a/ranger-examples/plugin-sampleapp/.gitignore b/ranger-examples/plugin-sampleapp/.gitignore
deleted file mode 100644
index b83d22266..000000000
--- a/ranger-examples/plugin-sampleapp/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/target/
diff --git a/ranger-examples/plugin-sampleapp/conf/ranger-policymgr-ssl.xml b/ranger-examples/plugin-sampleapp/conf/ranger-policymgr-ssl.xml
deleted file mode 100644
index 3baf7725c..000000000
--- a/ranger-examples/plugin-sampleapp/conf/ranger-policymgr-ssl.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
-	<!--  The following properties are used for 2-way SSL client server validation -->
-	<property>
-		<name>xasecure.policymgr.clientssl.keystore</name>
-		<value>hadoopdev-clientcert.jks</value>
-		<description> 
-			Java Keystore files 
-		</description>
-	</property>
-	<property>
-		<name>xasecure.policymgr.clientssl.truststore</name>
-		<value>cacerts-xasecure.jks</value>
-		<description> 
-			java truststore file
-		</description>
-	</property>
-    <property>
-		<name>xasecure.policymgr.clientssl.keystore.credential.file</name>
-		<value>jceks://file/tmp/keystore-hadoopdev-ssl.jceks</value>
-		<description> 
-			java  keystore credential file
-		</description>
-	</property>
-	<property>
-		<name>xasecure.policymgr.clientssl.truststore.credential.file</name>
-		<value>jceks://file/tmp/truststore-hadoopdev-ssl.jceks</value>
-		<description> 
-			java  truststore credential file
-		</description>
-	</property>
-</configuration>
\ No newline at end of file
diff --git a/ranger-examples/plugin-sampleapp/conf/ranger-sampleapp-audit.xml b/ranger-examples/plugin-sampleapp/conf/ranger-sampleapp-audit.xml
deleted file mode 100644
index 7fe343910..000000000
--- a/ranger-examples/plugin-sampleapp/conf/ranger-sampleapp-audit.xml
+++ /dev/null
@@ -1,47 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
-	<!-- HDFS audit provider configuration -->
-	<property>
-		<name>xasecure.audit.destination.hdfs</name>
-		<value>false</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.destination.hdfs.dir</name>
-		<value>hdfs://localhost:8020/ranger/audit</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.destination.hdfs.batch.filespool.dir</name>
-		<value>/tmp/audit/hdfs/spool</value>
-	</property>
-
-
-	<!-- Log4j audit provider configuration -->
-	<property>
-		<name>xasecure.audit.destination.log4j</name>
-		<value>true</value>
-	</property>	
-
-	<property>
-		<name>xasecure.audit.destination.log4j.logger</name>
-		<value>ranger_audit_logger</value>
-	</property>	
-</configuration>
diff --git a/ranger-examples/plugin-sampleapp/conf/ranger-sampleapp-security.xml b/ranger-examples/plugin-sampleapp/conf/ranger-sampleapp-security.xml
deleted file mode 100644
index befcea7c0..000000000
--- a/ranger-examples/plugin-sampleapp/conf/ranger-sampleapp-security.xml
+++ /dev/null
@@ -1,83 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
-	<property>
-		<name>ranger.plugin.sampleapp.policy.rest.url</name>
-		<value>http://localhost:6080</value>
-		<description>
-			URL to Ranger Admin
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.sampleapp.service.name</name>
-		<value>cl1_hadoop</value>
-		<description>
-			Name of the Ranger service containing policies for this SampleApp instance
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.sampleapp.policy.source.impl</name>
-		<value>org.apache.ranger.admin.client.RangerAdminRESTClient</value>
-		<description>
-			Class to retrieve policies from the source
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.sampleapp.policy.rest.ssl.config.file</name>
-		<value>ranger-policymgr-ssl.xml</value>
-		<description>
-			Path to the file containing SSL details to contact Ranger Admin
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.sampleapp.policy.pollIntervalMs</name>
-		<value>30000</value>
-		<description>
-			How often to poll for changes in policies?
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.sampleapp.policy.cache.dir</name>
-		<value>/tmp</value>
-		<description>
-			Directory where Ranger policies are cached after successful retrieval from the source
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.sampleapp.policy.rest.client.connection.timeoutMs</name>
-		<value>120000</value>
-		<description>
-			RangerRestClient Connection Timeout in Milli Seconds
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.sampleapp.policy.rest.client.read.timeoutMs</name>
-		<value>30000</value>
-		<description>
-			RangerRestClient read Timeout in Milli Seconds
-		</description>
-	</property>
-</configuration>
diff --git a/ranger-examples/plugin-sampleapp/pom.xml b/ranger-examples/plugin-sampleapp/pom.xml
deleted file mode 100644
index f7975bb15..000000000
--- a/ranger-examples/plugin-sampleapp/pom.xml
+++ /dev/null
@@ -1,85 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <artifactId>ranger-sampleapp-plugin</artifactId>
-    <name>Ranger Examples - Ranger Plugin for SampleApp</name>
-    <description>Ranger Examples - SampleApp</description>
-    <packaging>jar</packaging>
-    <parent>
-        <artifactId>ranger-examples</artifactId>
-        <groupId>org.apache.ranger</groupId>
-        <version>2.2.0</version>
-    </parent>
-    <dependencies>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>ranger-plugins-common</artifactId>
-            <version>${project.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>ranger-plugins-audit</artifactId>
-            <version>${project.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.hadoop</groupId>
-            <artifactId>hadoop-common</artifactId>
-            <version>${hadoop.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.commons</groupId>
-            <artifactId>commons-configuration2</artifactId>
-            <version>${commons.configuration.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>commons-lang</groupId>
-            <artifactId>commons-lang</artifactId>
-            <version>${commons.lang.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.sun.jersey</groupId>
-            <artifactId>jersey-bundle</artifactId>
-            <version>${jersey-bundle.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.codehaus.jackson</groupId>
-            <artifactId>jackson-jaxrs</artifactId>
-            <version>${codehaus.jackson.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.codehaus.jackson</groupId>
-            <artifactId>jackson-core-asl</artifactId>
-            <version>${codehaus.jackson.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.codehaus.jackson</groupId>
-            <artifactId>jackson-xc</artifactId>
-            <version>${codehaus.jackson.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.google.code.gson</groupId>
-            <artifactId>gson</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>com.google.guava</groupId>
-            <artifactId>guava</artifactId>
-            <version>${google.guava.version}</version>
-        </dependency>
-    </dependencies>
-</project>
diff --git a/ranger-examples/plugin-sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/IAuthorizer.java b/ranger-examples/plugin-sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/IAuthorizer.java
deleted file mode 100644
index f5dd9cb35..000000000
--- a/ranger-examples/plugin-sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/IAuthorizer.java
+++ /dev/null
@@ -1,28 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.examples.sampleapp;
-
-import java.util.Set;
-
-interface IAuthorizer {
-	void init();
-
-	boolean authorize(String fileName, String accessType, String user, Set<String> userGroups);
-}
diff --git a/ranger-examples/plugin-sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/RangerAuthorizer.java b/ranger-examples/plugin-sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/RangerAuthorizer.java
deleted file mode 100644
index 28db88ec6..000000000
--- a/ranger-examples/plugin-sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/RangerAuthorizer.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.examples.sampleapp;
-
-import java.util.Set;
-
-import org.apache.ranger.plugin.audit.RangerDefaultAuditHandler;
-import org.apache.ranger.plugin.service.RangerBasePlugin;
-import org.apache.ranger.plugin.policyengine.RangerAccessResourceImpl;
-import org.apache.ranger.plugin.policyengine.RangerAccessRequest;
-import org.apache.ranger.plugin.policyengine.RangerAccessRequestImpl;
-import org.apache.ranger.plugin.policyengine.RangerAccessResult;
-
-public class RangerAuthorizer implements IAuthorizer {
-    private static volatile RangerBasePlugin plugin = null;
-
-    public RangerAuthorizer() {
-
-    }
-
-    public void init() {
-        if(plugin == null) {
-            synchronized (RangerAuthorizer.class) {
-                if(plugin == null) {
-                    plugin = new RangerBasePlugin("sampleapp", "sampleapp");
-
-                    plugin.setResultProcessor(new RangerDefaultAuditHandler(plugin.getConfig()));
-
-                    plugin.init();
-                }
-            }
-        }
-    }
-
-    public boolean authorize(String fileName, String accessType, String user, Set<String> userGroups) {
-        RangerAccessResourceImpl resource = new RangerAccessResourceImpl();
-        resource.setValue("path", fileName); // "path" must be a value resource name in servicedef JSON
-
-        RangerAccessRequest request = new RangerAccessRequestImpl(resource, accessType, user, userGroups, null);
-
-        RangerAccessResult result = plugin.isAccessAllowed(request);
-
-        return result != null && result.getIsAllowed();
-    }
-}
diff --git a/ranger-examples/pom.xml b/ranger-examples/pom.xml
deleted file mode 100644
index a2aeb7cd0..000000000
--- a/ranger-examples/pom.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <parent>
-        <artifactId>ranger</artifactId>
-        <groupId>org.apache.ranger</groupId>
-        <version>2.2.0</version>
-    </parent>
-    <modelVersion>4.0.0</modelVersion>
-    <artifactId>ranger-examples</artifactId>
-    <packaging>pom</packaging>
-    <modules>
-        <module>conditions-enrichers</module>
-        <module>sampleapp</module>
-        <module>plugin-sampleapp</module>
-        <module>distro</module>
-        <module>sample-client</module>
-    </modules>
-</project>
diff --git a/ranger-examples/sample-client/.gitignore b/ranger-examples/sample-client/.gitignore
deleted file mode 100644
index 897593ca6..000000000
--- a/ranger-examples/sample-client/.gitignore
+++ /dev/null
@@ -1,2 +0,0 @@
-/target/
-/venv/
\ No newline at end of file
diff --git a/ranger-examples/sample-client/conf/ssl-client.xml b/ranger-examples/sample-client/conf/ssl-client.xml
deleted file mode 100644
index 7d73d12de..000000000
--- a/ranger-examples/sample-client/conf/ssl-client.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<configuration>
-    <property>
-        <name>xasecure.policymgr.clientssl.truststore</name>
-        <value></value>
-    </property>
-    <property>
-        <name>xasecure.policymgr.clientssl.truststore.credential.file</name>
-        <value></value>
-    </property>
-    <property>
-        <name>xasecure.policymgr.clientssl.truststore.type</name>
-        <value></value>
-    </property>
-</configuration>
\ No newline at end of file
diff --git a/ranger-examples/sample-client/pom.xml b/ranger-examples/sample-client/pom.xml
deleted file mode 100644
index 626ea65e8..000000000
--- a/ranger-examples/sample-client/pom.xml
+++ /dev/null
@@ -1,64 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Licensed to the Apache Software Foundation (ASF) under one
-  ~ or more contributor license agreements.  See the NOTICE file
-  ~ distributed with this work for additional information
-  ~ regarding copyright ownership.  The ASF licenses this file
-  ~ to you under the Apache License, Version 2.0 (the
-  ~ "License"); you may not use this file except in compliance
-  ~ with the License.  You may obtain a copy of the License at
-  ~
-  ~     http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-<project xmlns="http://maven.apache.org/POM/4.0.0"
-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <parent>
-        <artifactId>ranger-examples</artifactId>
-        <groupId>org.apache.ranger</groupId>
-        <version>2.2.0</version>
-    </parent>
-    <packaging>jar</packaging>
-    <modelVersion>4.0.0</modelVersion>
-
-    <artifactId>sample-client</artifactId>
-    <build>
-        <plugins>
-        </plugins>
-    </build>
-    <dependencies>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>ranger-intg</artifactId>
-            <version>${project.version}</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>ranger-plugins-common</artifactId>
-            <version>${project.version}</version>
-            <scope>compile</scope>
-        </dependency>
-        <dependency>
-            <groupId>commons-cli</groupId>
-            <artifactId>commons-cli</artifactId>
-            <version>${commons.cli.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>com.google.guava</groupId>
-            <artifactId>guava</artifactId>
-            <version>${google.guava.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.slf4j</groupId>
-            <artifactId>slf4j-api</artifactId>
-            <version>${slf4j-api.version}</version>
-        </dependency>
-    </dependencies>
-</project>
diff --git a/ranger-examples/sample-client/scripts/run-pyclient.sh b/ranger-examples/sample-client/scripts/run-pyclient.sh
deleted file mode 100755
index 8649f0bfb..000000000
--- a/ranger-examples/sample-client/scripts/run-pyclient.sh
+++ /dev/null
@@ -1,50 +0,0 @@
-#!/bin/bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-usage() {
-  echo "usage: run-pyclient.sh
-  -n <arg> url to connect to
-  -h       show help."
-  exit 1
-}
-
-cd venv || exit
-source bin/activate
-INSTALL="python3 ./../setup.py install"
-$INSTALL >> build.log
-PYTHON_CMD="python3 build/lib/pylib/sample_client.py"
-while getopts "n:h" opt; do
-  case $opt in
-    n) URL=$OPTARG
-	PYTHON_CMD="$PYTHON_CMD --url $URL"
-	;;
-    h) usage
-	;;
-    \?) echo -e \\n"Option -$OPTARG not allowed."
-	usage
-	;;
-  esac
-done
-
-prompt="Sample Authentication User Name:"
-read -p "$prompt" userName
-prompt="Sample Authentication User Password:"
-read -p "$prompt" -s password
-printf "\n"
-PYTHON_CMD="$PYTHON_CMD --username $userName --password $password"
-printf "Python command : %s\n" "$PYTHON_CMD"
-$PYTHON_CMD
\ No newline at end of file
diff --git a/ranger-examples/sample-client/scripts/run-sample-client.sh b/ranger-examples/sample-client/scripts/run-sample-client.sh
deleted file mode 100755
index 874080134..000000000
--- a/ranger-examples/sample-client/scripts/run-sample-client.sh
+++ /dev/null
@@ -1,74 +0,0 @@
-#!/bin/bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-usage() {
-  echo "usage: run-sample-client.sh
-  -n <arg> Hostname to connect to
-  -h       show help."
-  exit 1
-}
-JARS=
-  for i in lib/*.jar
-do
-    JARS="${JARS}:$i"
-done
-JAVA_CMD="java -Dlog4j.configuration=file:lib/log4j.properties -cp ${JARS} org.apache.ranger.examples.sampleclient.SampleClient"
-while getopts "n:h" opt; do
-  case $opt in
-    n) HOST=$OPTARG
-	JAVA_CMD="$JAVA_CMD -h $HOST"
-	;;
-    h) usage
-	;;
-    \?) echo -e \\n"Option -$OPTARG not allowed."
-	usage
-	;;
-  esac
-done
-
-if [[ $HOST == https*  ]] ;
-then
-  prompt="SSL Configuration File:"
-  read -p "$prompt" config
-  JAVA_CMD="$JAVA_CMD -c $config"
-fi
-prompt="Kerberos Login (y/n)? "
-read -p "$prompt" -n 1 -r
-printf "\n"
-if [[ $REPLY =~ ^[Yy]$ ]]
-then
-  prompt="Sample Kerberos Principal:"
-  read -r -p "$prompt" userName
-  prompt="Sample Kerberos Keytab:"
-  read -r -p "$prompt" password
-  printf "\n"
-  JAVA_CMD="$JAVA_CMD -k kerberos -u $userName -p $password"
-elif [[ $REPLY =~ ^[Nn]$ ]]
-then
-  prompt="Sample Authentication User Name:"
-  read -r -p "$prompt" userName
-  prompt="Sample Authentication User Password:"
-  read -r -p "$prompt" -s password
-  printf "\n"
-  JAVA_CMD="$JAVA_CMD -k basic -u $userName -p $password"
-else
-  printf "Incorrect response \n"
-  exit
-fi
-
-printf "Java command : $JAVA_CMD\n"
-$JAVA_CMD
\ No newline at end of file
diff --git a/ranger-examples/sample-client/scripts/setup.py b/ranger-examples/sample-client/scripts/setup.py
deleted file mode 100644
index c4e740769..000000000
--- a/ranger-examples/sample-client/scripts/setup.py
+++ /dev/null
@@ -1,30 +0,0 @@
-#!/usr/bin/env python
-
-#
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-from setuptools import setup, find_packages
-
-# External dependencies
-requirements = ['requests>=2.24']
-
-setup(
-    name='sample_pyclient',
-    packages=['pylib', 'pylib/ranger/client', 'pylib/ranger/model'],
-    data_files=[('../../lib/resources', ['resources/logging.conf'])],
-    install_requires=requirements,
-    zip_safe=False
-)
diff --git a/ranger-examples/sample-client/src/main/java/org/apache/ranger/examples/sampleclient/SampleClient.java b/ranger-examples/sample-client/src/main/java/org/apache/ranger/examples/sampleclient/SampleClient.java
deleted file mode 100644
index 7d5795065..000000000
--- a/ranger-examples/sample-client/src/main/java/org/apache/ranger/examples/sampleclient/SampleClient.java
+++ /dev/null
@@ -1,214 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-package org.apache.ranger.examples.sampleclient;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import org.apache.commons.cli.*;
-import org.apache.ranger.RangerClient;
-import org.apache.ranger.RangerServiceException;
-import org.apache.ranger.plugin.model.RangerPolicy;
-import org.apache.ranger.plugin.model.RangerRole;
-import org.apache.ranger.plugin.model.RangerService;
-import org.apache.ranger.plugin.model.RangerServiceDef;
-import org.slf4j.Logger;
-import org.slf4j.LoggerFactory;
-
-import java.util.*;
-
-public class SampleClient {
-    private static final Logger LOG = LoggerFactory.getLogger(SampleClient.class);
-
-
-    @SuppressWarnings("static-access")
-    public static void main(String[] args) throws RangerServiceException {
-        Gson gsonBuilder = new GsonBuilder().setDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").setPrettyPrinting().create();
-        Options options  = new Options();
-
-        Option host = OptionBuilder.hasArgs(1).isRequired().withLongOpt("host").withDescription("hostname").create('h');
-        Option auth = OptionBuilder.hasArgs(1).isRequired().withLongOpt("authType").withDescription("Authentication Type").create('k');
-        Option user = OptionBuilder.hasArgs(1).isRequired().withLongOpt("user").withDescription("username").create('u');
-        Option pass = OptionBuilder.hasArgs(1).isRequired().withLongOpt("pass").withDescription("password").create('p');
-        Option conf = OptionBuilder.hasArgs(1).withLongOpt("config").withDescription("configuration").create('c');
-
-        options.addOption(host);
-        options.addOption(auth);
-        options.addOption(user);
-        options.addOption(pass);
-        options.addOption(conf);
-
-        CommandLineParser parser = new BasicParser();
-        CommandLine cmd;
-
-        try {
-            cmd = parser.parse(options, args);
-        } catch (ParseException e) {
-            throw new RuntimeException(e);
-        }
-
-        String hostName = cmd.getOptionValue('h');
-        String userName = cmd.getOptionValue('u');
-        String password = cmd.getOptionValue('p');
-        String cfg      = cmd.getOptionValue('c');
-        String authType = cmd.getOptionValue('k');
-
-        RangerClient rangerClient = new RangerClient(hostName, authType, userName, password, cfg);
-
-        String serviceDefName     = "sampleServiceDef";
-        String serviceName        = "sampleService";
-        String policyName         = "samplePolicy";
-        String roleName           = "sampleRole";
-        Map<String,String> filter = Collections.emptyMap();
-
-
-        /*
-        Create a new Service Definition
-         */
-
-        RangerServiceDef.RangerServiceConfigDef config = new RangerServiceDef.RangerServiceConfigDef();
-        config.setItemId(1L);
-        config.setName("sampleConfig");
-        config.setType("string");
-        List<RangerServiceDef.RangerServiceConfigDef> configs = Collections.singletonList(config);
-
-        RangerServiceDef.RangerAccessTypeDef accessType = new RangerServiceDef.RangerAccessTypeDef();
-        accessType.setItemId(1L);
-        accessType.setName("sampleAccess");
-        List<RangerServiceDef.RangerAccessTypeDef> accessTypes = Collections.singletonList(accessType);
-
-        RangerServiceDef.RangerResourceDef resourceDef = new RangerServiceDef.RangerResourceDef();
-        resourceDef.setItemId(1L);
-        resourceDef.setName("root");
-        resourceDef.setType("string");
-        List<RangerServiceDef.RangerResourceDef> resourceDefs = Collections.singletonList(resourceDef);
-
-        RangerServiceDef serviceDef = new RangerServiceDef();
-        serviceDef.setName(serviceDefName);
-        serviceDef.setConfigs(configs);
-        serviceDef.setAccessTypes(accessTypes);
-        serviceDef.setResources(resourceDefs);
-
-        RangerServiceDef createdServiceDef = rangerClient.createServiceDef(serviceDef);
-        LOG.info("New Service Definition created successfully {}", gsonBuilder.toJson(createdServiceDef));
-
-        /*
-        Create a new Service
-         */
-        RangerService service = new RangerService();
-        service.setType(serviceDefName);
-        service.setName(serviceName);
-
-        RangerService createdService = rangerClient.createService(service);
-        LOG.info("New Service created successfully {}", gsonBuilder.toJson(createdService));
-
-        /*
-        All Services
-         */
-        List<RangerService> services = rangerClient.findServices(filter);
-        String allServiceNames = "";
-        for (RangerService svc: services) {
-            allServiceNames = allServiceNames.concat(svc.getName() + " ");
-        }
-        LOG.info("List of Services : {}", allServiceNames);
-
-        /*
-        Policy Management
-         */
-
-
-        /*
-        Create a new Policy
-         */
-        Map<String, RangerPolicy.RangerPolicyResource> resource = Collections.singletonMap(
-                "root", new RangerPolicy.RangerPolicyResource(Collections.singletonList("/path/to/sample/resource"),false,false));
-        RangerPolicy policy = new RangerPolicy();
-        policy.setService(serviceName);
-        policy.setName(policyName);
-        policy.setResources(resource);
-
-        RangerPolicy createdPolicy = rangerClient.createPolicy(policy);
-        LOG.info("New Policy created successfully {}", gsonBuilder.toJson(createdPolicy));
-
-        /*
-        Get a policy by name
-         */
-        RangerPolicy fetchedPolicy = rangerClient.getPolicy(serviceName, policyName);
-        LOG.info("Policy: {} fetched {}", policyName, gsonBuilder.toJson(fetchedPolicy));
-
-
-        /*
-        Delete a policy
-         */
-        rangerClient.deletePolicy(serviceName, policyName);
-        LOG.info("Policy {} successfully deleted", policyName);
-
-
-        /*
-        Delete a Service
-         */
-        rangerClient.deleteService(serviceName);
-        LOG.info("Service {} successfully deleted", serviceName);
-
-
-        /*
-        Delete a Service Definition
-         */
-        rangerClient.deleteServiceDef(serviceDefName);
-        LOG.info("Service Definition {} successfully deleted", serviceDefName);
-
-
-        /*
-        Role Management
-         */
-
-        /*
-        Create a role in Ranger
-         */
-        RangerRole sampleRole = new RangerRole();
-        sampleRole.setName(roleName);
-        sampleRole.setDescription("Sample Role");
-        sampleRole.setUsers(Collections.singletonList(new RangerRole.RoleMember(null,true)));
-        sampleRole = rangerClient.createRole(serviceName, sampleRole);
-        LOG.info("New Role successfully created {}", gsonBuilder.toJson(sampleRole));
-
-        /*
-        Update a role in Ranger
-         */
-        sampleRole.setDescription("Updated Sample Role");
-        RangerRole updatedRole = rangerClient.updateRole(sampleRole.getId(), sampleRole);
-        LOG.info("Role {} successfully updated {}", roleName, gsonBuilder.toJson(updatedRole));
-
-        /*
-        Get all roles in Ranger
-         */
-        List<RangerRole> allRoles = rangerClient.findRoles(filter);
-        LOG.info("List of Roles {}", gsonBuilder.toJson(allRoles));
-        String allRoleNames = "";
-        for (RangerRole role: allRoles) {
-            allRoleNames = allRoleNames.concat(role.getName() + " ");
-        }
-        LOG.info("List of Roles : {}", allRoleNames);
-
-        /*
-        Delete a role in Ranger
-         */
-        rangerClient.deleteRole(roleName, userName, serviceName);
-        LOG.info("Role {} successfully deleted", roleName);
-    }
-}
diff --git a/ranger-examples/sample-client/src/main/python/sample_client.py b/ranger-examples/sample-client/src/main/python/sample_client.py
deleted file mode 100644
index 902734901..000000000
--- a/ranger-examples/sample-client/src/main/python/sample_client.py
+++ /dev/null
@@ -1,319 +0,0 @@
-#!/usr/bin/env python
-
-#
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-import time
-
-from apache_ranger.model.ranger_service import *
-from apache_ranger.client.ranger_client import *
-from apache_ranger.model.ranger_policy  import *
-
-
-## create a client to connect to Apache Ranger admin server
-ranger_url  = 'http://localhost:6080'
-ranger_auth = ('admin', 'rangerR0cks!')
-
-# For Kerberos authentication
-#
-# from requests_kerberos import HTTPKerberosAuth
-#
-# ranger_auth = HTTPKerberosAuth()
-
-
-print('Using Ranger at ' + ranger_url);
-
-ranger = RangerClient(ranger_url, ranger_auth)
-
-# to disable SSL certificate validation (not recommended for production use!)
-#
-# ranger.session.verify = False
-
-
-print('Listing service-defs..')
-service_defs = ranger.find_service_defs()
-
-print('    ' + str(len(service_defs)) + ' service-defs found')
-for service_def in service_defs:
-    print('        ' + 'id: ' + str(service_def.id) + ', name: ' + service_def.name)
-
-
-service_name = 'dev_hive-' + str(int(time.time() * 1000))
-
-print('Creating service: name=' + service_name)
-
-service         = RangerService({'name': service_name, 'type': 'hive'})
-service.configs = {'username':'hive', 'password':'hive', 'jdbc.driverClassName': 'org.apache.hive.jdbc.HiveDriver', 'jdbc.url': 'jdbc:hive2://ranger-hadoop:10000', 'hadoop.security.authorization': 'true'}
-
-created_service = ranger.create_service(service)
-
-print('    created service: id: ' + str(created_service.id) + ', name: ' + created_service.name)
-
-service_id = created_service.id
-
-
-print('Retrieving service: id=' + str(service_id))
-
-retrieved_service = ranger.get_service_by_id(service_id)
-
-print('    retrieved service: id: ' + str(retrieved_service.id) + ', name: ' + retrieved_service.name)
-
-
-print('Retrieving service: name=' + service_name)
-
-retrieved_service = ranger.get_service(service_name)
-
-print('    retrieved service: id: ' + str(retrieved_service.id) + ', name: ' + retrieved_service.name)
-
-
-print('Updating service: id=' + str(service_id))
-
-saved_value                 = created_service.displayName
-created_service.displayName = service_name + '-UPDATE1'
-
-updated_service1 = ranger.update_service_by_id(service_id, created_service)
-
-print('    updated service: id: ' + str(updated_service1.id) + ', displayName: ' + saved_value + ', updatedDisplayName: ' + updated_service1.displayName)
-
-
-print('Updating service: name=' + service_name)
-
-saved_value                  = updated_service1.displayName
-updated_service1.displayName = service_name + '-UPDATE2'
-
-updated_service2 = ranger.update_service(service_name, updated_service1)
-
-print('    updated service: id: ' + str(updated_service2.id) + ', displayName: ' + saved_value + ', updatedDisplayName: ' + updated_service2.displayName)
-
-
-print('Listing services..')
-services = ranger.find_services()
-
-print('    ' + str(len(services)) + ' services found')
-for svc in services:
-    print('        ' + 'id: ' + str(svc.id) + ', type: ' + svc.type + ', name: ' + svc.name)
-
-
-print('Deleting service id=' + str(service_id))
-
-ranger.delete_service_by_id(service_id)
-
-print('    deleted service: id: ' + str(service_id) + ', name: ' + updated_service2.name)
-
-
-print('Deleting service: name=' + service.name)
-
-service_to_delete = ranger.create_service(service)
-
-print('    created service: id: ' + str(service_to_delete.id) + ', name: ' + service_to_delete.name)
-
-ranger.delete_service(service_to_delete.name)
-
-print('    deleted service: id: ' + str(service_to_delete.id) + ', name: ' + service_to_delete.name)
-
-
-print('Listing services..')
-services = ranger.find_services()
-
-print('    ' + str(len(services)) + ' services found')
-for svc in services:
-    print('        ' + 'id: ' + str(svc.id) + ', type: ' + svc.type + ', name: ' + svc.name)
-
-
-policy_name = 'test policy'
-
-print('Creating policy: name=' + policy_name)
-
-created_service = ranger.create_service(service)
-
-print('    created service: id: ' + str(created_service.id) + ', name: ' + created_service.name)
-
-service_id   = created_service.id
-service_name = created_service.name
-
-policy             = RangerPolicy()
-policy.service     = service_name
-policy.name        = policy_name
-policy.description = 'test description'
-policy.resources   = { 'database': RangerPolicyResource({ 'values': ['test_db'] }),
-                       'table':    RangerPolicyResource({ 'values': ['test_tbl'] }),
-					   'column':   RangerPolicyResource({ 'values': ['*'] }) }
-
-allowItem1          = RangerPolicyItem()
-allowItem1.users    = [ 'admin' ]
-allowItem1.accesses = [ RangerPolicyItemAccess({ 'type': 'create' }),
-                        RangerPolicyItemAccess({ 'type': 'alter' }),
-                        RangerPolicyItemAccess({ 'type': 'select' }) ]
-
-denyItem1          = RangerPolicyItem()
-denyItem1.users    = [ 'admin' ]
-denyItem1.accesses = [ RangerPolicyItemAccess({ 'type': 'drop' }) ]
-
-policy.policyItems     = [ allowItem1 ]
-policy.denyPolicyItems = [ denyItem1 ]
-
-created_policy = ranger.create_policy(policy)
-
-print('    created policy: id: ' + str(created_policy.id) + ', name: ' + created_policy.name)
-
-policy_id = created_policy.id
-
-
-data_mask_policy_name = 'test masking policy'
-
-print('Creating data-masking policy: name=' + data_mask_policy_name)
-
-data_mask_policy             = RangerPolicy()
-data_mask_policy.service     = service_name
-data_mask_policy.policyType  = RangerPolicy.POLICY_TYPE_DATAMASK
-data_mask_policy.name        = data_mask_policy_name
-data_mask_policy.description = 'test description'
-data_mask_policy.resources   = { 'database': RangerPolicyResource({ 'values': ['test_db'] }),
-                                 'table':    RangerPolicyResource({ 'values': ['test_tbl'] }),
-					             'column':   RangerPolicyResource({ 'values': ['test_col'] }) }
-
-policyItem1              = RangerDataMaskPolicyItem()
-policyItem1.users        = [ 'admin' ]
-policyItem1.accesses     = [ RangerPolicyItemAccess({ 'type': 'select' }) ]
-policyItem1.dataMaskInfo = RangerPolicyItemDataMaskInfo({ 'dataMaskType': 'MASK_SHOW_LAST_4' })
-
-data_mask_policy.dataMaskPolicyItems = [ policyItem1 ]
-
-created_data_mask_policy = ranger.create_policy(data_mask_policy)
-
-print('    created data-masking policy: id: ' + str(created_data_mask_policy.id) + ', name: ' + created_data_mask_policy.name)
-
-
-row_filter_policy_name = 'test row filter policy'
-
-print('Creating row-filtering policy: name=' + row_filter_policy_name)
-
-row_filter_policy             = RangerPolicy()
-row_filter_policy.service     = service_name
-row_filter_policy.policyType  = RangerPolicy.POLICY_TYPE_ROWFILTER
-row_filter_policy.name        = row_filter_policy_name
-row_filter_policy.description = 'test description'
-row_filter_policy.resources   = { 'database': RangerPolicyResource({ 'values': ['test_db'] }),
-                                  'table':    RangerPolicyResource({ 'values': ['test_tbl'] }) }
-
-policyItem1               = RangerRowFilterPolicyItem()
-policyItem1.users         = [ 'admin' ]
-policyItem1.accesses      = [ RangerPolicyItemAccess({ 'type': 'select' }) ]
-policyItem1.rowFilterInfo = RangerPolicyItemRowFilterInfo({ 'filterExpr': 'country_code = "US"' })
-
-row_filter_policy.rowFilterPolicyItems = [ policyItem1 ]
-
-create_row_filter_policy = ranger.create_policy(row_filter_policy)
-
-print('    created row-filtering policy: id: ' + str(create_row_filter_policy.id) + ', name: ' + create_row_filter_policy.name)
-
-
-print('Retrieving policy: id=' + str(policy_id))
-
-retrieved_policy = ranger.get_policy_by_id(policy_id)
-
-print('    retrieved policy: id: ' + str(retrieved_policy.id) + ', name: ' + retrieved_policy.name)
-
-
-print('Retrieving policy: service_name=' + service_name + ', policy_name=' + data_mask_policy.name)
-
-retrieved_policy = ranger.get_policy(service_name, data_mask_policy.name)
-
-print('    retrieved policy: id: ' + str(retrieved_policy.id) + ', name: ' + retrieved_policy.name)
-
-
-print('Retrieving policy: service_name=' + service_name + ', policy_name=' + row_filter_policy.name)
-
-retrieved_policy = ranger.get_policy(service_name, row_filter_policy.name)
-
-print('    retrieved policy: id: ' + str(retrieved_policy.id) + ', name: ' + retrieved_policy.name)
-
-
-print('Retrieving policies in service ' + created_policy.service + '..')
-
-policies = ranger.get_policies_in_service(created_policy.service)
-
-print('    ' + str(len(policies)) + ' policies found')
-for plcy in policies:
-    print('        id: ' + str(plcy.id) + ', service: ' + plcy.service + ', name: ' + plcy.name)
-
-
-print('Updating policy: id=' + str(policy_id))
-
-saved_value                = created_policy.description
-created_policy.description = 'updated description - #1'
-
-updated_policy1 = ranger.update_policy_by_id(policy_id, created_policy)
-
-print('    updated policy: id: ' + str(updated_policy1.id) + ', description: ' + saved_value + ', updatedDescription: ' + updated_policy1.description)
-
-
-print('Updating policy: service_name=' + service_name + ', policy_name=' + policy_name)
-
-saved_value                 = updated_policy1.description
-updated_policy1.description = 'updated description - #2'
-
-updated_policy2 = ranger.update_policy(service_name, policy_name, updated_policy1)
-
-print('    updated policy: id: ' + str(updated_policy2.id) + ', description: ' + saved_value + ', updatedDescription: ' + updated_policy2.description)
-
-
-print('Deleting policy: id=' + str(policy_id))
-
-ranger.delete_policy_by_id(policy_id)
-
-print('    deleted policy: id: ' + str(policy_id) + ', name: ' + updated_policy2.name)
-
-
-print('Deleting policy: service_name=' + data_mask_policy.service + ', policy_name=' + data_mask_policy.name)
-
-ranger.delete_policy(data_mask_policy.service, data_mask_policy.name)
-
-print('    deleted policy: id: ' + str(data_mask_policy.id) + ', name: ' + data_mask_policy.name)
-
-
-print('Deleting policy: service_name=' + row_filter_policy.service + ', policy_name=' + row_filter_policy.name)
-
-ranger.delete_policy(row_filter_policy.service, row_filter_policy.name)
-
-print('    deleted policy: id: ' + str(row_filter_policy.id) + ', name: ' + row_filter_policy.name)
-
-ranger.delete_service_by_id(service_id)
-
-
-print('Listing policies..')
-policies = ranger.find_policies()
-
-print('    ' + str(len(policies)) + ' policies found')
-for policy in policies:
-    print('        id: ' + str(policy.id) + ', service: ' + policy.service + ', name: ' + policy.name)
-
-
-print('Listing security zones..')
-security_zones = ranger.find_security_zones()
-
-print('    ' + str(len(security_zones)) + ' security zones found')
-for security_zone in security_zones:
-    print('        id: ' + str(security_zone.id) + ', name: ' + security_zone.name)
-
-
-print('Listing roles..')
-roles = ranger.find_roles()
-
-print('    ' + str(len(roles)) + ' roles zones found')
-for role in roles:
-    print('        id: ' + str(role.id) + ', name: ' + role.name)
-
diff --git a/ranger-examples/sample-client/src/main/resources/log4j.properties b/ranger-examples/sample-client/src/main/resources/log4j.properties
deleted file mode 100644
index 9c8bd003f..000000000
--- a/ranger-examples/sample-client/src/main/resources/log4j.properties
+++ /dev/null
@@ -1,23 +0,0 @@
-#
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-log4j.rootLogger = INFO,console
-log4j.appender.console=org.apache.log4j.ConsoleAppender
-log4j.appender.console.Threshold=INFO
-log4j.appender.console.Target=System.out
-log4j.appender.console.layout=org.apache.log4j.PatternLayout
-log4j.appender.console.layout.conversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p - %m%n
\ No newline at end of file
diff --git a/ranger-examples/sample-client/src/main/resources/logging.conf b/ranger-examples/sample-client/src/main/resources/logging.conf
deleted file mode 100644
index c168775d7..000000000
--- a/ranger-examples/sample-client/src/main/resources/logging.conf
+++ /dev/null
@@ -1,40 +0,0 @@
-#
-# Licensed to the Apache Software Foundation (ASF) under one
-# or more contributor license agreements.  See the NOTICE file
-# distributed with this work for additional information
-# regarding copyright ownership.  The ASF licenses this file
-# to you under the Apache License, Version 2.0 (the
-# "License"); you may not use this file except in compliance
-# with the License.  You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-[loggers]
-keys=root
-
-[handlers]
-keys=consoleHandler
-
-[formatters]
-keys=simpleFormatter
-
-[logger_root]
-level=INFO
-handlers=consoleHandler
-
-[handler_consoleHandler]
-class=StreamHandler
-level=INFO
-formatter=simpleFormatter
-args=(sys.stdout,)
-
-[formatter_simpleFormatter]
-format=%(asctime)s.%(msecs)03d %(levelname)s:%(name)s:%(message)s
-datefmt=%Y-%m-%d %H:%M:%S
diff --git a/ranger-examples/sampleapp/.gitignore b/ranger-examples/sampleapp/.gitignore
deleted file mode 100644
index b83d22266..000000000
--- a/ranger-examples/sampleapp/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/target/
diff --git a/ranger-examples/sampleapp/conf/log4j.xml b/ranger-examples/sampleapp/conf/log4j.xml
deleted file mode 100644
index d475b911d..000000000
--- a/ranger-examples/sampleapp/conf/log4j.xml
+++ /dev/null
@@ -1,65 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
-
-<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" debug="false">
-	<appender name="console_appender" class="org.apache.log4j.ConsoleAppender">
-		<param name="target" value="System.out" />
-		<layout class="org.apache.log4j.PatternLayout">
-			<param name="ConversionPattern" value="[%p]: %m%n" />
-		</layout>
-	</appender>
-
-	<appender name="sampleapp_log_appender" class="org.apache.log4j.DailyRollingFileAppender">
-		<param name="file" value="/tmp/sampleapp.log" />
-		<param name="datePattern" value="'.'yyyy-MM-dd" />
-		<param name="append" value="true" />
-		<layout class="org.apache.log4j.PatternLayout">
-			<param name="ConversionPattern" value="%d [%t] %-5p %C{6} (%F:%L) - %m%n" />
-		</layout>
-	</appender>
-
-	<appender name="ranger_audit_appender" class="org.apache.log4j.DailyRollingFileAppender">
-		<param name="file" value="/tmp/sampleapp-ranger_audit.log" />
-		<param name="datePattern" value="'.'yyyy-MM-dd" />
-		<param name="append" value="true" />
-		<layout class="org.apache.log4j.PatternLayout">
-			<param name="ConversionPattern" value="%m%n" />
-		</layout>
-	</appender>
-
-	<category name="org.apache.ranger.examples.sampleapp" additivity="false">
-		<priority value="info" />
-		<appender-ref ref="console_appender" />
-	</category>
-
-	<category name="org.apache.ranger" additivity="false">
-		<priority value="info" />
-		<appender-ref ref="sampleapp_log_appender" />
-	</category>
-
-	<category name="ranger_audit_logger">
-		<level value="info" />
-		<appender-ref ref="ranger_audit_appender" />
-	</category>
-
-	<root>
-		<priority value="warn" />
-		<appender-ref ref="sampleapp_log_appender" />
-	</root>
-</log4j:configuration>
diff --git a/ranger-examples/sampleapp/pom.xml b/ranger-examples/sampleapp/pom.xml
deleted file mode 100644
index 9572a7154..000000000
--- a/ranger-examples/sampleapp/pom.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <artifactId>sampleapp</artifactId>
-    <name>Ranger Examples - SampleApp</name>
-    <description>Ranger Examples - SampleApp</description>
-    <packaging>jar</packaging>
-    <parent>
-        <artifactId>ranger-examples</artifactId>
-        <groupId>org.apache.ranger</groupId>
-        <version>2.2.0</version>
-    </parent>
-    <dependencies>
-        <dependency>
-            <groupId>commons-logging</groupId>
-            <artifactId>commons-logging</artifactId>
-            <version>${commons.logging.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.logging.log4j</groupId>
-            <artifactId>log4j</artifactId>
-            <version>${log4j.version}</version>
-            <type>pom</type>
-        </dependency>
-    </dependencies>
-</project>
diff --git a/ranger-examples/sampleapp/scripts/run-sampleapp.sh b/ranger-examples/sampleapp/scripts/run-sampleapp.sh
deleted file mode 100755
index 028b5310d..000000000
--- a/ranger-examples/sampleapp/scripts/run-sampleapp.sh
+++ /dev/null
@@ -1,39 +0,0 @@
-#!/bin/bash
-
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-AUTHORIZER_TYPE=$1
-
-
-JARS=
-for i in lib/*.jar conf
-do
-    JARS="${JARS}:$i"
-done
-
-if [ "${AUTHORIZER_TYPE}" == "ranger-authz" ]
-then
-  AUTHORIZER_ARG="-Dsampleapp.authorizer=org.apache.ranger.examples.sampleapp.RangerAuthorizer"
-  for i in lib/ranger-sampleapp-plugin-impl/*.jar
-  do
-    JARS="${JARS}:$i"
-  done
-fi
-
-CLASSPATH=$CLASSPATH:$JARS
-
-java -cp ${CLASSPATH} ${AUTHORIZER_ARG} org.apache.ranger.examples.sampleapp.SampleApp
diff --git a/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/DefaultAuthorizer.java b/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/DefaultAuthorizer.java
deleted file mode 100644
index a238da69d..000000000
--- a/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/DefaultAuthorizer.java
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.examples.sampleapp;
-
-import java.util.Set;
-
-public class DefaultAuthorizer implements IAuthorizer {
-    public DefaultAuthorizer() {
-
-    }
-
-    public void init() {
-
-    }
-
-    public boolean authorize(String fileName, String accessType, String user, Set<String> userGroups) {
-        return true;
-    }
-}
\ No newline at end of file
diff --git a/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/IAuthorizer.java b/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/IAuthorizer.java
deleted file mode 100644
index f5dd9cb35..000000000
--- a/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/IAuthorizer.java
+++ /dev/null
@@ -1,28 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.examples.sampleapp;
-
-import java.util.Set;
-
-interface IAuthorizer {
-	void init();
-
-	boolean authorize(String fileName, String accessType, String user, Set<String> userGroups);
-}
diff --git a/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/SampleApp.java b/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/SampleApp.java
deleted file mode 100644
index 045ffab50..000000000
--- a/ranger-examples/sampleapp/src/main/java/org/apache/ranger/examples/sampleapp/SampleApp.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.examples.sampleapp;
-
-import java.util.HashSet;
-import java.util.Scanner;
-import java.util.Set;
-import java.nio.charset.StandardCharsets;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-
-public class SampleApp {
-	private static final Log LOG = LogFactory.getLog(SampleApp.class);
-
-	private static final Set<String> VALID_ACCESS_TYPES = new HashSet<String>();
-
-	private IAuthorizer authorizer = null;
-
-	public static void main(String[] args) {
-		SampleApp app = new SampleApp();
-
-		app.init();
-
-		app.run();
-	}
-
-	public void init() {
-		VALID_ACCESS_TYPES.add("read");
-		VALID_ACCESS_TYPES.add("write");
-		VALID_ACCESS_TYPES.add("execute");
-
-		authorizer = createAuthorizer();
-	}
-
-	public void run() {
-		LOG.debug("==> SampleApp.run()");
-
-		do {
-			String input = getInput();
-
-			if(input == null) {
-				break;
-			}
-
-			if(input.trim().isEmpty()) {
-				continue;
-			}
-
-			String[]    args       = input.split("\\s+");
-			String      accessType = getStringArg(args, 0);
-			String      fileName   = getStringArg(args, 1);
-			String      userName   = getStringArg(args, 2);
-			Set<String> userGroups = new HashSet<String>();
-
-			for(int i = 3; i < args.length; i++) {
-				userGroups.add(args[i]);
-			}
-
-			if(fileName == null || accessType == null || userName == null) {
-				LOG.info("Insufficient arguments. Usage: <accessType> <fileName> <userName> [userGroup1 userGroup2 userGroup3 ..]");
-
-				continue;
-			}
-
-			if(! VALID_ACCESS_TYPES.contains(accessType)) {
-				LOG.info(accessType + ": invalid accessType");
-
-				continue;
-			}
-
-			if(authorizer.authorize(fileName, accessType, userName, userGroups)) {
-				LOG.info("Authorized!");
-			} else {
-				LOG.info("Not authorized!");
-			}
-		} while(true);
-
-		LOG.debug("<== SampleApp.run()");
-	}
-
-	private IAuthorizer createAuthorizer() {
-		IAuthorizer ret = null;
-
-		String authzClassName = System.getProperty("sampleapp.authorizer");
-
-		if(authzClassName != null) {
-			try {
-				Class<IAuthorizer> clz = (Class<IAuthorizer>) Class.forName(authzClassName);
-
-				ret = clz.newInstance();
-			} catch(Exception excp) {
-				LOG.warn("Failed to create authorizer of type '" + authzClassName + "'", excp);
-			}
-		}
-
-		if(ret == null) {
-			LOG.info("Using default authorizer");
-			ret = new DefaultAuthorizer();
-		}
-
-		ret.init();
-
-		return ret;
-	}
-
-	private String getStringArg(String[] args, int index) {
-		if(args == null || args.length <= index) {
-			return null;
-		}
-
-		return args[index];
-	}
-
-	private String getInput() {
-
-		try (Scanner inputReader = new Scanner(System.in, StandardCharsets.UTF_8.name())) {
-			System.out.print("command> ");
-			System.out.flush();
-			return inputReader.nextLine();
-		} catch(Exception excp) {
-			// ignore
-		}
-
-		return null;
-	}
-}
