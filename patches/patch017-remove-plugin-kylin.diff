diff --git a/plugin-kylin/.gitignore b/plugin-kylin/.gitignore
deleted file mode 100644
index b83d22266..000000000
--- a/plugin-kylin/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/target/
diff --git a/plugin-kylin/conf/ranger-kylin-audit-changes.cfg b/plugin-kylin/conf/ranger-kylin-audit-changes.cfg
deleted file mode 100644
index c396d5d55..000000000
--- a/plugin-kylin/conf/ranger-kylin-audit-changes.cfg
+++ /dev/null
@@ -1,75 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-xasecure.audit.hdfs.is.enabled                                     %XAAUDIT.HDFS.IS_ENABLED%                               mod create-if-not-exists
-xasecure.audit.hdfs.config.destination.directory                   %XAAUDIT.HDFS.DESTINATION_DIRECTORY%                    mod create-if-not-exists
-xasecure.audit.hdfs.config.destination.file                        %XAAUDIT.HDFS.DESTINTATION_FILE%                        mod create-if-not-exists
-xasecure.audit.hdfs.config.destination.flush.interval.seconds      %XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS%      mod create-if-not-exists
-xasecure.audit.hdfs.config.destination.rollover.interval.seconds   %XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS%   mod create-if-not-exists
-xasecure.audit.hdfs.config.destination.open.retry.interval.seconds %XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS% mod create-if-not-exists
-xasecure.audit.hdfs.config.local.buffer.directory                  %XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY%                   mod create-if-not-exists
-xasecure.audit.hdfs.config.local.buffer.file                       %XAAUDIT.HDFS.LOCAL_BUFFER_FILE%                        mod create-if-not-exists
-xasecure.audit.hdfs.config.local.buffer.flush.interval.seconds     %XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS%      mod create-if-not-exists
-xasecure.audit.hdfs.config.local.buffer.rollover.interval.seconds  %XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS%   mod create-if-not-exists
-xasecure.audit.hdfs.config.local.archive.directory                 %XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY%                  mod create-if-not-exists
-xasecure.audit.hdfs.config.local.archive.max.file.count            %XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT%             mod create-if-not-exists
-
-#xasecure.audit.kafka.is.enabled                                    %XAAUDIT.KAFKA.IS_ENABLED%                             mod create-if-not-exists
-#xasecure.audit.kafka.is.async                                      %XAAUDIT.KAFKA.IS_ASYNC%                               mod create-if-not-exists
-#xasecure.audit.kafka.async.max.queue.size                          %XAAUDIT.KAFKA.MAX_QUEUE_SIZE%                         mod create-if-not-exists
-#xasecure.audit.kafka.async.max.flush.interval.ms                   %XAAUDIT.KAFKA.MAX_FLUSH_INTERVAL_MS%                  mod create-if-not-exists
-#xasecure.audit.kafka.broker_list                                   %XAAUDIT.KAFKA.BROKER_LIST%                            mod create-if-not-exists
-#xasecure.audit.kafka.topic_name                                    %XAAUDIT.KAFKA.TOPIC_NAME%                             mod create-if-not-exists
-
-xasecure.audit.solr.is.enabled                                    %XAAUDIT.SOLR.IS_ENABLED%                               mod create-if-not-exists
-xasecure.audit.solr.async.max.queue.size                          %XAAUDIT.SOLR.MAX_QUEUE_SIZE%                           mod create-if-not-exists
-xasecure.audit.solr.async.max.flush.interval.ms                   %XAAUDIT.SOLR.MAX_FLUSH_INTERVAL_MS%                    mod create-if-not-exists
-xasecure.audit.solr.solr_url                                      %XAAUDIT.SOLR.SOLR_URL%                                 mod create-if-not-exists
-
-#V3 configuration
-xasecure.audit.destination.solr                                    %XAAUDIT.SOLR.ENABLE%                               mod create-if-not-exists
-xasecure.audit.destination.solr.urls                               %XAAUDIT.SOLR.URL%                                 mod create-if-not-exists
-xasecure.audit.destination.solr.user %XAAUDIT.SOLR.USER% mod create-if-not-exists
-xasecure.audit.destination.solr.password %XAAUDIT.SOLR.PASSWORD% mod create-if-not-exists
-xasecure.audit.destination.solr.zookeepers                         %XAAUDIT.SOLR.ZOOKEEPER%                           mod create-if-not-exists
-xasecure.audit.destination.solr.batch.filespool.dir                %XAAUDIT.SOLR.FILE_SPOOL_DIR%                      mod create-if-not-exists
-
-xasecure.audit.destination.elasticsearch                                    %XAAUDIT.ELASTICSEARCH.ENABLE%                              mod create-if-not-exists
-xasecure.audit.destination.elasticsearch.urls                               %XAAUDIT.ELASTICSEARCH.URL%                                 mod create-if-not-exists
-xasecure.audit.destination.elasticsearch.user 							   %XAAUDIT.ELASTICSEARCH.USER% 								  mod create-if-not-exists
-xasecure.audit.destination.elasticsearch.password 						   %XAAUDIT.ELASTICSEARCH.PASSWORD% 							  mod create-if-not-exists
-xasecure.audit.destination.elasticsearch.index 						   %XAAUDIT.ELASTICSEARCH.INDEX% 							  mod create-if-not-exists
-xasecure.audit.destination.elasticsearch.port 						   %XAAUDIT.ELASTICSEARCH.PORT% 							  mod create-if-not-exists
-xasecure.audit.destination.elasticsearch.protocol 						   %XAAUDIT.ELASTICSEARCH.PROTOCOL% 							  mod create-if-not-exists
-
-xasecure.audit.destination.hdfs					   %XAAUDIT.HDFS.ENABLE%                      mod create-if-not-exists
-xasecure.audit.destination.hdfs.batch.filespool.dir                %XAAUDIT.HDFS.FILE_SPOOL_DIR%                      mod create-if-not-exists
-xasecure.audit.destination.hdfs.dir                		   %XAAUDIT.HDFS.HDFS_DIR%                      mod create-if-not-exists
-
-AZURE.ACCOUNTNAME                                                                                                 %XAAUDIT.HDFS.AZURE_ACCOUNTNAME%            var
-xasecure.audit.destination.hdfs.config.fs.azure.shellkeyprovider.script                                           %XAAUDIT.HDFS.AZURE_SHELL_KEY_PROVIDER%     mod         create-if-not-exists
-xasecure.audit.destination.hdfs.config.fs.azure.account.key.%AZURE.ACCOUNTNAME%.blob.core.windows.net             %XAAUDIT.HDFS.AZURE_ACCOUNTKEY%             mod         create-if-not-exists
-xasecure.audit.destination.hdfs.config.fs.azure.account.keyprovider.%AZURE.ACCOUNTNAME%.blob.core.windows.net     %XAAUDIT.HDFS.AZURE_ACCOUNTKEY_PROVIDER%    mod         create-if-not-exists
-
-#xasecure.audit.destination.file					   %XAAUDIT.FILE.ENABLE%                      mod create-if-not-exists
-#xasecure.audit.destination.file.dir                		   %XAAUDIT.FILE.DIR%                      mod create-if-not-exists
-
-#log4j configuration
-xasecure.audit.log4j.is.enabled                %XAAUDIT.LOG4J.ENABLE%                      mod create-if-not-exists
-xasecure.audit.log4j.is.async                %XAAUDIT.LOG4J.IS_ASYNC%                      mod create-if-not-exists
-xasecure.audit.log4j.async.max.queue.size                %XAAUDIT.LOG4J.ASYNC.MAX.QUEUE.SIZE%                      mod create-if-not-exists
-xasecure.audit.log4j.async.max.flush.interval.ms                %XAAUDIT.LOG4J.ASYNC.MAX.FLUSH.INTERVAL.MS%                      mod create-if-not-exists
-xasecure.audit.destination.log4j                %XAAUDIT.LOG4J.DESTINATION.LOG4J%                      mod create-if-not-exists
-xasecure.audit.destination.log4j.logger                %XAAUDIT.LOG4J.DESTINATION.LOG4J.LOGGER%                      mod create-if-not-exists
diff --git a/plugin-kylin/conf/ranger-kylin-audit.xml b/plugin-kylin/conf/ranger-kylin-audit.xml
deleted file mode 100644
index f6878147e..000000000
--- a/plugin-kylin/conf/ranger-kylin-audit.xml
+++ /dev/null
@@ -1,216 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
-	<property>
-		<name>xasecure.audit.is.enabled</name>
-		<value>true</value>
-	</property>
-
-	<!-- HDFS audit provider configuration -->
-	<property>
-		<name>xasecure.audit.hdfs.is.enabled</name>
-		<value>false</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.is.async</name>
-		<value>true</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.async.max.queue.size</name>
-		<value>1048576</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.async.max.flush.interval.ms</name>
-		<value>30000</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.encoding</name>
-		<value></value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.destination.directory</name>
-		<value>hdfs://NAMENODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.destination.file</name>
-		<value>%hostname%-audit.log</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.destination.flush.interval.seconds</name>
-		<value>900</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.destination.rollover.interval.seconds</name>
-		<value>86400</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.destination.open.retry.interval.seconds</name>
-		<value>60</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.local.buffer.directory</name>
-		<value>/var/log/kylin/audit</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.local.buffer.file</name>
-		<value>%time:yyyyMMdd-HHmm.ss%.log</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.local.buffer.file.buffer.size.bytes</name>
-		<value>8192</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.local.buffer.flush.interval.seconds</name>
-		<value>60</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.local.buffer.rollover.interval.seconds</name>
-		<value>600</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.local.archive.directory</name>
-		<value>/var/log/kylin/audit/archive</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.hdfs.config.local.archive.max.file.count</name>
-		<value>10</value>
-	</property>
-
-	<!-- Audit to HDFS on Azure Datastore (WASB) requires v3 style settings.  Comment the above and uncomment only the
-	following to audit to Azure Blob Datastore via hdfs' WASB schema.
-
-	NOTE: If you specify one audit destination in v3 style then other destinations, if any, must also be specified in v3 style
-	====
-
-	<property>
-		<name>xasecure.audit.destination.hdfs</name>
-		<value>enabled</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.destination.hdfs.dir</name>
-		<value>wasb://ranger-audit1@youraccount.blob.core.windows.net</value>
-	</property>
-
-	the following 3 correspond to the properties with similar name in core-site.xml, i.e.
-	- fs.azure.account.key.youraccount.blob.core.windows.net => xasecure.audit.destination.hdfs.config.fs.azure.account.key.youraccount.blob.core.windows.net and
-	- fs.azure.account.keyprovider.youraccount.blob.core.windows.net => xasecure.audit.destination.hdfs.config.fs.azure.account.keyprovider.youraccount.blob.core.windows.net,
-	- fs.azure.shellkeyprovider.script => xasecure.audit.destination.hdfs.config.fs.azure.shellkeyprovider.script,
-
-	<property>
-		<name>xasecure.audit.destination.hdfs.config.fs.azure.account.key.youraccount.blob.core.windows.net</name>
-		<value>YOUR ENCRYPTED ACCESS KEY</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.destination.hdfs.config.fs.azure.account.keyprovider.youraccount.blob.core.windows.net</name>
-		<value>org.apache.hadoop.fs.azure.ShellDecryptionKeyProvider</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.destination.hdfs.config.fs.azure.shellkeyprovider.script</name>
-		<value>/usr/lib/python2.7/dist-packages/hdinsight_common/decrypt.sh</value>
-	</property>
-	-->
-
-	<!-- Log4j audit provider configuration -->
-	<property>
-		<name>xasecure.audit.log4j.is.enabled</name>
-		<value>false</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.log4j.is.async</name>
-		<value>false</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.log4j.async.max.queue.size</name>
-		<value>10240</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.log4j.async.max.flush.interval.ms</name>
-		<value>30000</value>
-	</property>
-
-	<!-- Kafka audit provider configuration -->
-	<property>
-		<name>xasecure.audit.kafka.is.enabled</name>
-		<value>false</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.kafka.async.max.queue.size</name>
-		<value>1</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.kafka.async.max.flush.interval.ms</name>
-		<value>1000</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.kafka.broker_list</name>
-		<value>localhost:9092</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.kafka.topic_name</name>
-		<value>ranger_audits</value>
-	</property>
-
-	<!-- Ranger audit provider configuration -->
-	<property>
-		<name>xasecure.audit.solr.is.enabled</name>
-		<value>false</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.solr.async.max.queue.size</name>
-		<value>1</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.solr.async.max.flush.interval.ms</name>
-		<value>1000</value>
-	</property>
-
-	<property>
-		<name>xasecure.audit.solr.solr_url</name>
-		<value>http://localhost:6083/solr/ranger_audits</value>
-	</property>
-
-</configuration>
diff --git a/plugin-kylin/conf/ranger-kylin-security-changes.cfg b/plugin-kylin/conf/ranger-kylin-security-changes.cfg
deleted file mode 100644
index abffd71a4..000000000
--- a/plugin-kylin/conf/ranger-kylin-security-changes.cfg
+++ /dev/null
@@ -1,28 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-# Change the original policy parameter to work with policy manager based.
-#
-#
-ranger.plugin.kylin.service.name %REPOSITORY_NAME% mod create-if-not-exists
-
-ranger.plugin.kylin.policy.source.impl org.apache.ranger.admin.client.RangerAdminRESTClient mod create-if-not-exists
-
-ranger.plugin.kylin.policy.rest.url                %POLICY_MGR_URL%                          mod create-if-not-exists
-ranger.plugin.kylin.policy.rest.ssl.config.file    %COMPONENT_INSTALL_DIR_NAME%/conf/ranger-policymgr-ssl.xml mod create-if-not-exists
-ranger.plugin.kylin.policy.pollIntervalMs          30000                                     mod create-if-not-exists
-ranger.plugin.kylin.policy.cache.dir               %POLICY_CACHE_FILE_PATH%                  mod create-if-not-exists
-ranger.plugin.kylin.policy.rest.client.connection.timeoutMs 	  120000					    mod create-if-not-exists
-ranger.plugin.kylin.policy.rest.client.read.timeoutMs	   	  30000					        mod create-if-not-exists
\ No newline at end of file
diff --git a/plugin-kylin/conf/ranger-kylin-security.xml b/plugin-kylin/conf/ranger-kylin-security.xml
deleted file mode 100644
index 7b383fc20..000000000
--- a/plugin-kylin/conf/ranger-kylin-security.xml
+++ /dev/null
@@ -1,83 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
-	<property>
-		<name>ranger.plugin.kylin.service.name</name>
-		<value>kylindev</value>
-		<description>
-			Name of the Ranger service containing policies for this kylin instance
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.source.impl</name>
-		<value>org.apache.ranger.admin.client.RangerAdminRESTClient</value>
-		<description>
-			Class to retrieve policies from the source
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.rest.url</name>
-		<value>http://policymanagerhost:port</value>
-		<description>
-			URL to Ranger Admin
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.rest.ssl.config.file</name>
-		<value>/etc/hadoop/conf/ranger-policymgr-ssl.xml</value>
-		<description>
-			Path to the file containing SSL details to contact Ranger Admin
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.pollIntervalMs</name>
-		<value>30000</value>
-		<description>
-			How often to poll for changes in policies?
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.cache.dir</name>
-		<value>/etc/ranger/hadoopdev/policycache</value>
-		<description>
-			Directory where Ranger policies are cached after successful retrieval from the source
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.rest.client.connection.timeoutMs</name>
-		<value>120000</value>
-		<description>
-			RangerRestClient Connection Timeout in Milli Seconds
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.rest.client.read.timeoutMs</name>
-		<value>30000</value>
-		<description>
-			RangerRestClient read Timeout in Milli Seconds
-		</description>
-	</property>
-</configuration>
diff --git a/plugin-kylin/conf/ranger-policymgr-ssl-changes.cfg b/plugin-kylin/conf/ranger-policymgr-ssl-changes.cfg
deleted file mode 100644
index ae347e845..000000000
--- a/plugin-kylin/conf/ranger-policymgr-ssl-changes.cfg
+++ /dev/null
@@ -1,21 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-# SSL Params
-#
-xasecure.policymgr.clientssl.keystore					 %SSL_KEYSTORE_FILE_PATH%						mod create-if-not-exists
-xasecure.policymgr.clientssl.keystore.credential.file	 jceks://file%CREDENTIAL_PROVIDER_FILE%			mod create-if-not-exists
-xasecure.policymgr.clientssl.truststore				     %SSL_TRUSTSTORE_FILE_PATH%						mod create-if-not-exists
-xasecure.policymgr.clientssl.truststore.credential.file  jceks://file%CREDENTIAL_PROVIDER_FILE%         mod create-if-not-exists
diff --git a/plugin-kylin/conf/ranger-policymgr-ssl.xml b/plugin-kylin/conf/ranger-policymgr-ssl.xml
deleted file mode 100644
index 1f9acf007..000000000
--- a/plugin-kylin/conf/ranger-policymgr-ssl.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
-	<!--  The following properties are used for 2-way SSL client server validation -->
-	<property>
-		<name>xasecure.policymgr.clientssl.keystore</name>
-		<value>kylindev-clientcert.jks</value>
-		<description>
-			java keystore files
-		</description>
-	</property>
-	<property>
-		<name>xasecure.policymgr.clientssl.truststore</name>
-		<value>cacerts-xasecure.jks</value>
-		<description>
-			java truststore file
-		</description>
-	</property>
-    <property>
-		<name>xasecure.policymgr.clientssl.keystore.credential.file</name>
-		<value>jceks://file/tmp/keystore-kylindev-ssl.jceks</value>
-		<description>
-			java keystore credential file
-		</description>
-	</property>
-	<property>
-		<name>xasecure.policymgr.clientssl.truststore.credential.file</name>
-		<value>jceks://file/tmp/truststore-kylindev-ssl.jceks</value>
-		<description>
-			java truststore credential file
-		</description>
-	</property>
-</configuration>
\ No newline at end of file
diff --git a/plugin-kylin/pom.xml b/plugin-kylin/pom.xml
deleted file mode 100644
index 0379db66f..000000000
--- a/plugin-kylin/pom.xml
+++ /dev/null
@@ -1,102 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <artifactId>ranger-kylin-plugin</artifactId>
-    <name>Kylin Security Plugin</name>
-    <description>Kylin Security Plugin</description>
-    <packaging>jar</packaging>
-    <properties>
-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
-    </properties>
-    <parent>
-        <groupId>org.apache.ranger</groupId>
-        <artifactId>ranger</artifactId>
-        <version>2.2.0</version>
-        <relativePath>..</relativePath>
-    </parent>
-    <dependencies>
-        <dependency>
-            <groupId>org.springframework.security</groupId>
-            <artifactId>spring-security-test</artifactId>
-            <version>${springframework.security.version}</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.mockito</groupId>
-            <artifactId>mockito-core</artifactId>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.calcite</groupId>
-            <artifactId>calcite-linq4j</artifactId>
-            <version>1.16.0</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.kylin</groupId>
-            <artifactId>kylin-server-base</artifactId>
-            <version>${kylin.version}</version>
-            <scope>provided</scope>
-            <exclusions>
-                <exclusion>
-                    <groupId>org.apache.kylin</groupId>
-                    <artifactId>kylin-external-htrace</artifactId>
-                </exclusion>
-                <exclusion>
-                    <groupId>org.apache.calcite</groupId>
-                    <artifactId>calcite-core</artifactId>
-                </exclusion>
-            </exclusions>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>ranger-plugins-common</artifactId>
-            <version>${project.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>ranger-plugins-audit</artifactId>
-            <version>${project.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.ranger</groupId>
-            <artifactId>credentialbuilder</artifactId>
-            <version>${project.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.solr</groupId>
-            <artifactId>solr-solrj</artifactId>
-            <version>${solr.version}</version>
-        </dependency>
-        <dependency>
-            <groupId>org.apache.httpcomponents</groupId>
-            <artifactId>httpcore</artifactId>
-            <version>${httpcomponents.httpcore.version}</version>
-        </dependency>
-		<dependency>
-			<groupId>com.fasterxml.jackson.core</groupId>
-			<artifactId>jackson-databind</artifactId>
-			<version>${fasterxml.jackson.databind.version}</version>
-			<scope>test</scope>
-		</dependency>
-    </dependencies>
-</project>
diff --git a/plugin-kylin/scripts/install.properties b/plugin-kylin/scripts/install.properties
deleted file mode 100644
index b08f0edec..000000000
--- a/plugin-kylin/scripts/install.properties
+++ /dev/null
@@ -1,164 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-#
-# Location of Policy Manager URL
-#
-# Example:
-# POLICY_MGR_URL=http://policymanager.xasecure.net:6080
-#
-POLICY_MGR_URL=
-
-#
-# This is the repository name created within policy manager
-#
-# Example:
-# REPOSITORY_NAME=kylindev
-#
-REPOSITORY_NAME=
-
-#
-# Name of the directory where the component's lib and conf directory exist.
-# This location should be relative to the parent of the directory containing
-# the plugin installation files.
-#
-COMPONENT_INSTALL_DIR_NAME=../kylin
-
-# Enable audit logs to Solr
-#Example
-#XAAUDIT.SOLR.ENABLE=true
-#XAAUDIT.SOLR.URL=http://localhost:6083/solr/ranger_audits
-#XAAUDIT.SOLR.ZOOKEEPER=
-#XAAUDIT.SOLR.FILE_SPOOL_DIR=/var/log/kylin/audit/solr/spool
-
-XAAUDIT.SOLR.ENABLE=false
-XAAUDIT.SOLR.URL=NONE
-XAAUDIT.SOLR.USER=NONE
-XAAUDIT.SOLR.PASSWORD=NONE
-XAAUDIT.SOLR.ZOOKEEPER=NONE
-XAAUDIT.SOLR.FILE_SPOOL_DIR=/var/log/kylin/audit/solr/spool
-
-# Enable audit logs to ElasticSearch
-#Example
-#XAAUDIT.ELASTICSEARCH.ENABLE=true
-#XAAUDIT.ELASTICSEARCH.URL=localhost
-#XAAUDIT.ELASTICSEARCH.INDEX=audit
-
-XAAUDIT.ELASTICSEARCH.ENABLE=false
-XAAUDIT.ELASTICSEARCH.URL=NONE
-XAAUDIT.ELASTICSEARCH.USER=NONE
-XAAUDIT.ELASTICSEARCH.PASSWORD=NONE
-XAAUDIT.ELASTICSEARCH.INDEX=NONE
-XAAUDIT.ELASTICSEARCH.PORT=NONE
-XAAUDIT.ELASTICSEARCH.PROTOCOL=NONE
-
-# Enable audit logs to HDFS
-#Example
-#XAAUDIT.HDFS.ENABLE=true
-#XAAUDIT.HDFS.HDFS_DIR=hdfs://node-1.example.com:8020/ranger/audit
-#  If using Azure Blob Storage
-#XAAUDIT.HDFS.HDFS_DIR=wasb[s]://<containername>@<accountname>.blob.core.windows.net/<path>
-#XAAUDIT.HDFS.HDFS_DIR=wasb://ranger_audit_container@my-azure-account.blob.core.windows.net/ranger/audit
-#XAAUDIT.HDFS.FILE_SPOOL_DIR=/var/log/kylin/audit/hdfs/spool
-
-XAAUDIT.HDFS.ENABLE=false
-XAAUDIT.HDFS.HDFS_DIR=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit
-XAAUDIT.HDFS.FILE_SPOOL_DIR=/var/log/kylin/audit/hdfs/spool
-
-# Following additional propertis are needed When auditing to Azure Blob Storage via HDFS
-# Get these values from your /etc/hadoop/conf/core-site.xml
-#XAAUDIT.HDFS.HDFS_DIR=wasb[s]://<containername>@<accountname>.blob.core.windows.net/<path>
-XAAUDIT.HDFS.AZURE_ACCOUNTNAME=__REPLACE_AZURE_ACCOUNT_NAME
-XAAUDIT.HDFS.AZURE_ACCOUNTKEY=__REPLACE_AZURE_ACCOUNT_KEY
-XAAUDIT.HDFS.AZURE_SHELL_KEY_PROVIDER=__REPLACE_AZURE_SHELL_KEY_PROVIDER
-XAAUDIT.HDFS.AZURE_ACCOUNTKEY_PROVIDER=__REPLACE_AZURE_ACCOUNT_KEY_PROVIDER
-
-#Log4j Audit Provider
-XAAUDIT.LOG4J.ENABLE=false
-XAAUDIT.LOG4J.IS_ASYNC=false
-XAAUDIT.LOG4J.ASYNC.MAX.QUEUE.SIZE=10240
-XAAUDIT.LOG4J.ASYNC.MAX.FLUSH.INTERVAL.MS=30000
-XAAUDIT.LOG4J.DESTINATION.LOG4J=true
-XAAUDIT.LOG4J.DESTINATION.LOG4J.LOGGER=xaaudit
-
-# End of V3 properties
-
-
-#
-#  Audit to HDFS Configuration
-#
-# If XAAUDIT.HDFS.IS_ENABLED is set to true, please replace tokens
-# that start with __REPLACE__ with appropriate values
-#  XAAUDIT.HDFS.IS_ENABLED=true
-#  XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
-#  XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=__REPLACE__LOG_DIR/kylin/audit
-#  XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=__REPLACE__LOG_DIR/kylin/audit/archive
-#
-# Example:
-#  XAAUDIT.HDFS.IS_ENABLED=true
-#  XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://namenode.example.com:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
-#  XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=/var/log/kylin/audit
-#  XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=/var/log/kylin/audit/archive
-#
-XAAUDIT.HDFS.IS_ENABLED=false
-XAAUDIT.HDFS.DESTINATION_DIRECTORY=hdfs://__REPLACE__NAME_NODE_HOST:8020/ranger/audit/%app-type%/%time:yyyyMMdd%
-XAAUDIT.HDFS.LOCAL_BUFFER_DIRECTORY=__REPLACE__LOG_DIR/kylin/audit
-XAAUDIT.HDFS.LOCAL_ARCHIVE_DIRECTORY=__REPLACE__LOG_DIR/kylin/audit/archive
-
-XAAUDIT.HDFS.DESTINTATION_FILE=%hostname%-audit.log
-XAAUDIT.HDFS.DESTINTATION_FLUSH_INTERVAL_SECONDS=900
-XAAUDIT.HDFS.DESTINTATION_ROLLOVER_INTERVAL_SECONDS=86400
-XAAUDIT.HDFS.DESTINTATION_OPEN_RETRY_INTERVAL_SECONDS=60
-XAAUDIT.HDFS.LOCAL_BUFFER_FILE=%time:yyyyMMdd-HHmm.ss%.log
-XAAUDIT.HDFS.LOCAL_BUFFER_FLUSH_INTERVAL_SECONDS=60
-XAAUDIT.HDFS.LOCAL_BUFFER_ROLLOVER_INTERVAL_SECONDS=600
-XAAUDIT.HDFS.LOCAL_ARCHIVE_MAX_FILE_COUNT=10
-
-#Solr Audit Provider
-XAAUDIT.SOLR.IS_ENABLED=false
-XAAUDIT.SOLR.MAX_QUEUE_SIZE=1
-XAAUDIT.SOLR.MAX_FLUSH_INTERVAL_MS=1000
-XAAUDIT.SOLR.SOLR_URL=http://localhost:6083/solr/ranger_audits
-
-# End of V2 properties
-
-#
-# SSL Client Certificate Information
-#
-# Example:
-# SSL_KEYSTORE_FILE_PATH=/etc/hadoop/conf/ranger-plugin-keystore.jks
-# SSL_KEYSTORE_PASSWORD=none
-# SSL_TRUSTSTORE_FILE_PATH=/etc/hadoop/conf/ranger-plugin-truststore.jks
-# SSL_TRUSTSTORE_PASSWORD=none
-#
-# You do not need use SSL between agent and security admin tool, please leave these sample value as it is.
-#
-SSL_KEYSTORE_FILE_PATH=/etc/hadoop/conf/ranger-plugin-keystore.jks
-SSL_KEYSTORE_PASSWORD=myKeyFilePassword
-SSL_TRUSTSTORE_FILE_PATH=/etc/hadoop/conf/ranger-plugin-truststore.jks
-SSL_TRUSTSTORE_PASSWORD=changeit
-
-#
-# Custom component user
-# CUSTOM_COMPONENT_USER=<custom-user>
-# keep blank if component user is default
-CUSTOM_USER=kylin
-
-
-#
-# Custom component group
-# CUSTOM_COMPONENT_GROUP=<custom-group>
-# keep blank if component group is default
-CUSTOM_GROUP=hadoop
diff --git a/plugin-kylin/src/main/java/org/apache/ranger/authorization/kylin/authorizer/RangerKylinAuthorizer.java b/plugin-kylin/src/main/java/org/apache/ranger/authorization/kylin/authorizer/RangerKylinAuthorizer.java
deleted file mode 100644
index e084990f2..000000000
--- a/plugin-kylin/src/main/java/org/apache/ranger/authorization/kylin/authorizer/RangerKylinAuthorizer.java
+++ /dev/null
@@ -1,180 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.ranger.authorization.kylin.authorizer;
-
-import java.net.InetAddress;
-import java.net.UnknownHostException;
-import java.util.Date;
-import java.util.List;
-
-import org.apache.commons.lang.StringUtils;
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.kylin.common.KylinConfig;
-import org.apache.kylin.common.util.Pair;
-import org.apache.kylin.metadata.project.ProjectInstance;
-import org.apache.kylin.metadata.project.ProjectManager;
-import org.apache.kylin.rest.security.AclEntityType;
-import org.apache.kylin.rest.security.AclPermission;
-import org.apache.kylin.rest.security.ExternalAclProvider;
-import org.apache.ranger.plugin.audit.RangerDefaultAuditHandler;
-import org.apache.ranger.plugin.policyengine.RangerAccessRequestImpl;
-import org.apache.ranger.plugin.policyengine.RangerAccessResourceImpl;
-import org.apache.ranger.plugin.policyengine.RangerAccessResult;
-import org.apache.ranger.plugin.service.RangerBasePlugin;
-import org.apache.ranger.services.kylin.client.KylinResourceMgr;
-import org.springframework.security.acls.model.Permission;
-
-import com.google.common.collect.Sets;
-
-public class RangerKylinAuthorizer extends ExternalAclProvider {
-	private static final Log LOG = LogFactory.getLog(RangerKylinAuthorizer.class);
-
-	private static volatile RangerKylinPlugin kylinPlugin = null;
-
-	private static String clientIPAddress = null;
-
-	@Override
-	public void init() {
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerKylinAuthorizer.init()");
-		}
-
-		RangerKylinPlugin plugin = kylinPlugin;
-
-		if (plugin == null) {
-			synchronized (RangerKylinAuthorizer.class) {
-				plugin = kylinPlugin;
-
-				if (plugin == null) {
-					plugin = new RangerKylinPlugin();
-					plugin.init();
-					kylinPlugin = plugin;
-
-					clientIPAddress = getClientIPAddress();
-				}
-			}
-		}
-
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerKylinAuthorizer.init()");
-		}
-	}
-
-	@Override
-	public boolean checkPermission(String user, List<String> groups, String entityType, String entityUuid,
-			Permission permission) {
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerKylinAuthorizer.checkPermission( user=" + user + ", groups=" + groups
-					+ ", entityType=" + entityType + ", entityUuid=" + entityUuid + ", permission=" + permission + ")");
-		}
-
-		boolean ret = false;
-
-		if (kylinPlugin != null) {
-			String projectName = null;
-			KylinConfig kylinConfig = KylinConfig.getInstanceFromEnv();
-			if (AclEntityType.PROJECT_INSTANCE.equals(entityType)) {
-				ProjectInstance projectInstance = ProjectManager.getInstance(kylinConfig).getPrjByUuid(entityUuid);
-				if (projectInstance != null) {
-					projectName = projectInstance.getName();
-				} else {
-					if (LOG.isWarnEnabled()) {
-						LOG.warn("Could not find kylin project for given uuid=" + entityUuid);
-					}
-				}
-			}
-
-			String accessType = ExternalAclProvider.transformPermission(permission);
-			RangerKylinAccessRequest request = new RangerKylinAccessRequest(projectName, user, groups, accessType,
-					clientIPAddress);
-
-			RangerAccessResult result = kylinPlugin.isAccessAllowed(request);
-			if (result != null && result.getIsAllowed()) {
-				ret = true;
-			}
-		}
-
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerKylinAuthorizer.checkPermission(): result=" + ret);
-		}
-
-		return ret;
-	}
-
-	private String getClientIPAddress() {
-		InetAddress ip = null;
-		try {
-			ip = InetAddress.getLocalHost();
-		} catch (UnknownHostException e) {
-			if (LOG.isDebugEnabled()) {
-				LOG.debug("Failed to get client IP address." + e);
-			}
-		}
-
-		String ret = null;
-		if (ip != null) {
-			ret = ip.getHostAddress();
-		}
-		return ret;
-	}
-
-	@Override
-	public List<Pair<String, AclPermission>> getAcl(String entityType, String entityUuid) {
-		// No need to implement
-		return null;
-	}
-}
-
-class RangerKylinPlugin extends RangerBasePlugin {
-	public RangerKylinPlugin() {
-		super("kylin", "kylin");
-	}
-
-	@Override
-	public void init() {
-		super.init();
-
-		RangerDefaultAuditHandler auditHandler = new RangerDefaultAuditHandler(getConfig());
-
-		super.setResultProcessor(auditHandler);
-	}
-}
-
-class RangerKylinResource extends RangerAccessResourceImpl {
-	public RangerKylinResource(String projectName) {
-		if (StringUtils.isEmpty(projectName)) {
-			projectName = "*";
-		}
-
-		setValue(KylinResourceMgr.PROJECT, projectName);
-	}
-}
-
-class RangerKylinAccessRequest extends RangerAccessRequestImpl {
-	public RangerKylinAccessRequest(String projectName, String user, List<String> groups, String accessType,
-			String clientIPAddress) {
-		super.setResource(new RangerKylinResource(projectName));
-		super.setAccessType(accessType);
-		super.setUser(user);
-		super.setUserGroups(Sets.newHashSet(groups));
-		super.setAccessTime(new Date());
-		super.setClientIPAddress(clientIPAddress);
-		super.setAction(accessType);
-	}
-}
\ No newline at end of file
diff --git a/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/RangerServiceKylin.java b/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/RangerServiceKylin.java
deleted file mode 100644
index 7dc7d74e5..000000000
--- a/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/RangerServiceKylin.java
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.ranger.services.kylin;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import org.apache.commons.logging.Log;
-import org.apache.commons.logging.LogFactory;
-import org.apache.ranger.plugin.model.RangerService;
-import org.apache.ranger.plugin.model.RangerServiceDef;
-import org.apache.ranger.plugin.service.RangerBaseService;
-import org.apache.ranger.plugin.service.ResourceLookupContext;
-import org.apache.ranger.services.kylin.client.KylinResourceMgr;
-
-public class RangerServiceKylin extends RangerBaseService {
-
-	private static final Log LOG = LogFactory.getLog(RangerServiceKylin.class);
-
-	public RangerServiceKylin() {
-		super();
-	}
-
-	@Override
-	public void init(RangerServiceDef serviceDef, RangerService service) {
-		super.init(serviceDef, service);
-	}
-
-	@Override
-	public Map<String, Object> validateConfig() throws Exception {
-		Map<String, Object> ret = new HashMap<String, Object>();
-		String serviceName = getServiceName();
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerServiceKylin.validateConfig Service: (" + serviceName + " )");
-		}
-		if (configs != null) {
-			try {
-				ret = KylinResourceMgr.validateConfig(serviceName, configs);
-			} catch (Exception e) {
-				LOG.error("<== RangerServiceKylin.validateConfig Error:" + e);
-				throw e;
-			}
-		}
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerServiceKylin.validateConfig Response : (" + ret + " )");
-		}
-		return ret;
-	}
-
-	@Override
-	public List<String> lookupResource(ResourceLookupContext context) throws Exception {
-
-		List<String> ret = new ArrayList<String>();
-		String serviceName = getServiceName();
-		Map<String, String> configs = getConfigs();
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("==> RangerServiceKylin.lookupResource Context: (" + context + ")");
-		}
-		if (context != null) {
-			try {
-				ret = KylinResourceMgr.getKylinResources(serviceName, configs, context);
-			} catch (Exception e) {
-				LOG.error("<==RangerServiceKylin.lookupResource Error : " + e);
-				throw e;
-			}
-		}
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("<== RangerServiceKylin.lookupResource Response: (" + ret + ")");
-		}
-		return ret;
-	}
-}
diff --git a/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/KylinClient.java b/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/KylinClient.java
deleted file mode 100644
index 17e0ecbb6..000000000
--- a/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/KylinClient.java
+++ /dev/null
@@ -1,291 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.services.kylin.client;
-
-import java.security.PrivilegedAction;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import javax.security.auth.Subject;
-
-import org.apache.commons.collections.CollectionUtils;
-import org.apache.commons.collections.MapUtils;
-import org.apache.commons.lang.ArrayUtils;
-import org.apache.commons.lang.StringUtils;
-import org.apache.http.HttpStatus;
-import org.apache.log4j.Logger;
-import org.apache.ranger.plugin.client.BaseClient;
-import org.apache.ranger.plugin.client.HadoopException;
-import org.apache.ranger.plugin.util.PasswordUtils;
-import org.apache.ranger.services.kylin.client.json.model.KylinProjectResponse;
-
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.reflect.TypeToken;
-import com.sun.jersey.api.client.Client;
-import com.sun.jersey.api.client.ClientResponse;
-import com.sun.jersey.api.client.WebResource;
-import com.sun.jersey.api.client.filter.HTTPBasicAuthFilter;
-
-public class KylinClient extends BaseClient {
-
-	private static final Logger LOG = Logger.getLogger(KylinClient.class);
-
-	private static final String EXPECTED_MIME_TYPE = "application/json";
-
-	private static final String KYLIN_LIST_API_ENDPOINT = "/kylin/api/projects";
-
-	private static final String ERROR_MESSAGE = " You can still save the repository and start creating "
-			+ "policies, but you would not be able to use autocomplete for "
-			+ "resource names. Check ranger_admin.log for more info.";
-
-	private String kylinUrl;
-	private String userName;
-	private String password;
-
-	public KylinClient(String serviceName, Map<String, String> configs) {
-
-		super(serviceName, configs, "kylin-client");
-
-		this.kylinUrl = configs.get("kylin.url");
-		this.userName = configs.get("username");
-		this.password = configs.get("password");
-
-		if (StringUtils.isEmpty(this.kylinUrl)) {
-			LOG.error("No value found for configuration 'kylin.url'. Kylin resource lookup will fail.");
-		}
-		if (StringUtils.isEmpty(this.userName)) {
-			LOG.error("No value found for configuration 'username'. Kylin resource lookup will fail.");
-		}
-		if (StringUtils.isEmpty(this.password)) {
-			LOG.error("No value found for configuration 'password'. Kylin resource lookup will fail.");
-		}
-
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("Kylin client is build with url [" + this.kylinUrl + "], user: [" + this.userName
-					+ "], password: [" + "*********" + "].");
-		}
-	}
-
-	public List<String> getProjectList(final String projectMatching, final List<String> existingProjects) {
-
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("Getting kylin project list for projectMatching: " + projectMatching + ", existingProjects: "
-					+ existingProjects);
-		}
-		Subject subj = getLoginSubject();
-		if (subj == null) {
-			return Collections.emptyList();
-		}
-
-		List<String> ret = Subject.doAs(subj, new PrivilegedAction<List<String>>() {
-
-			@Override
-			public List<String> run() {
-
-				ClientResponse response = getClientResponse(kylinUrl, userName, password);
-
-				List<KylinProjectResponse> projectResponses = getKylinProjectResponse(response);
-
-				if (CollectionUtils.isEmpty(projectResponses)) {
-					return Collections.emptyList();
-				}
-
-				List<String> projects = getProjectFromResponse(projectMatching, existingProjects, projectResponses);
-
-				return projects;
-			}
-		});
-
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("Getting kylin project list result: " + ret);
-		}
-		return ret;
-	}
-
-	private static ClientResponse getClientResponse(String kylinUrl, String userName, String password) {
-		ClientResponse response = null;
-		String[] kylinUrls = kylinUrl.trim().split("[,;]");
-		if (ArrayUtils.isEmpty(kylinUrls)) {
-			return null;
-		}
-
-		Client client = Client.create();
-		String decryptedPwd = PasswordUtils.getDecryptPassword(password);
-		client.addFilter(new HTTPBasicAuthFilter(userName, decryptedPwd));
-
-		for (String currentUrl : kylinUrls) {
-			if (StringUtils.isBlank(currentUrl)) {
-				continue;
-			}
-
-			String url = currentUrl.trim() + KYLIN_LIST_API_ENDPOINT;
-			try {
-				response = getProjectResponse(url, client);
-
-				if (response != null) {
-					if (response.getStatus() == HttpStatus.SC_OK) {
-						break;
-					} else {
-						response.close();
-					}
-				}
-			} catch (Throwable t) {
-				String msgDesc = "Exception while getting kylin response, kylinUrl: " + url;
-				LOG.error(msgDesc, t);
-			}
-		}
-		client.destroy();
-
-		return response;
-	}
-
-	private List<KylinProjectResponse> getKylinProjectResponse(ClientResponse response) {
-		List<KylinProjectResponse> projectResponses = null;
-		try {
-			if (response != null) {
-				if (response.getStatus() == HttpStatus.SC_OK) {
-					String jsonString = response.getEntity(String.class);
-					Gson gson = new GsonBuilder().setPrettyPrinting().create();
-
-					projectResponses = gson.fromJson(jsonString, new TypeToken<List<KylinProjectResponse>>() {
-					}.getType());
-				} else {
-					String msgDesc = "Unable to get a valid response for " + "expected mime type : [" + EXPECTED_MIME_TYPE
-							+ "], kylinUrl: " + kylinUrl + " - got http response code " + response.getStatus();
-					LOG.error(msgDesc);
-					HadoopException hdpException = new HadoopException(msgDesc);
-					hdpException.generateResponseDataMap(false, msgDesc, msgDesc + ERROR_MESSAGE, null, null);
-					throw hdpException;
-				}
-			} else {
-				String msgDesc = "Unable to get a valid response for " + "expected mime type : [" + EXPECTED_MIME_TYPE
-						+ "], kylinUrl: " + kylinUrl + " - got null response.";
-				LOG.error(msgDesc);
-				HadoopException hdpException = new HadoopException(msgDesc);
-				hdpException.generateResponseDataMap(false, msgDesc, msgDesc + ERROR_MESSAGE, null, null);
-				throw hdpException;
-			}
-		} catch (HadoopException he) {
-			throw he;
-		} catch (Throwable t) {
-			String msgDesc = "Exception while getting kylin project response, kylinUrl: " + kylinUrl;
-			HadoopException hdpException = new HadoopException(msgDesc, t);
-
-			LOG.error(msgDesc, t);
-
-			hdpException.generateResponseDataMap(false, BaseClient.getMessage(t), msgDesc + ERROR_MESSAGE, null, null);
-			throw hdpException;
-
-		} finally {
-			if (response != null) {
-				response.close();
-			}
-		}
-		return projectResponses;
-	}
-
-	private static ClientResponse getProjectResponse(String url, Client client) {
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("getProjectResponse():calling " + url);
-		}
-
-		WebResource webResource = client.resource(url);
-
-		ClientResponse response = webResource.accept(EXPECTED_MIME_TYPE).get(ClientResponse.class);
-
-		if (response != null) {
-			if (LOG.isDebugEnabled()) {
-				LOG.debug("getProjectResponse():response.getStatus()= " + response.getStatus());
-			}
-			if (response.getStatus() != HttpStatus.SC_OK) {
-				LOG.warn("getProjectResponse():response.getStatus()= " + response.getStatus() + " for URL " + url
-						+ ", failed to get kylin project list.");
-				String jsonString = response.getEntity(String.class);
-				LOG.warn(jsonString);
-			}
-		}
-		return response;
-	}
-
-	private static List<String> getProjectFromResponse(String projectMatching, List<String> existingProjects,
-			List<KylinProjectResponse> projectResponses) {
-		List<String> projcetNames = new ArrayList<String>();
-		for (KylinProjectResponse project : projectResponses) {
-			String projectName = project.getName();
-			if (CollectionUtils.isNotEmpty(existingProjects) && existingProjects.contains(projectName)) {
-				continue;
-			}
-			if (StringUtils.isEmpty(projectMatching) || projectMatching.startsWith("*")
-					|| projectName.toLowerCase().startsWith(projectMatching.toLowerCase())) {
-				if (LOG.isDebugEnabled()) {
-					LOG.debug("getProjectFromResponse(): Adding kylin project " + projectName);
-				}
-				projcetNames.add(projectName);
-			}
-		}
-		return projcetNames;
-	}
-
-	public static Map<String, Object> connectionTest(String serviceName, Map<String, String> configs) {
-		KylinClient kylinClient = getKylinClient(serviceName, configs);
-		List<String> strList = kylinClient.getProjectList(null, null);
-
-		boolean connectivityStatus = false;
-		if (CollectionUtils.isNotEmpty(strList)) {
-			if (LOG.isDebugEnabled()) {
-				LOG.debug("ConnectionTest list size" + strList.size() + " kylin projects");
-			}
-			connectivityStatus = true;
-		}
-
-		Map<String, Object> responseData = new HashMap<String, Object>();
-		if (connectivityStatus) {
-			String successMsg = "ConnectionTest Successful";
-			BaseClient.generateResponseDataMap(connectivityStatus, successMsg, successMsg, null, null, responseData);
-		} else {
-			String failureMsg = "Unable to retrieve any kylin projects using given parameters.";
-			BaseClient.generateResponseDataMap(connectivityStatus, failureMsg, failureMsg + ERROR_MESSAGE, null, null,
-					responseData);
-		}
-
-		return responseData;
-	}
-
-	public static KylinClient getKylinClient(String serviceName, Map<String, String> configs) {
-		KylinClient kylinClient = null;
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("Getting KylinClient for datasource: " + serviceName);
-		}
-		if (MapUtils.isEmpty(configs)) {
-			String msgDesc = "Could not connect kylin as connection configMap is empty.";
-			LOG.error(msgDesc);
-			HadoopException hdpException = new HadoopException(msgDesc);
-			hdpException.generateResponseDataMap(false, msgDesc, msgDesc + ERROR_MESSAGE, null, null);
-			throw hdpException;
-		} else {
-			kylinClient = new KylinClient(serviceName, configs);
-		}
-		return kylinClient;
-	}
-}
\ No newline at end of file
diff --git a/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/KylinResourceMgr.java b/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/KylinResourceMgr.java
deleted file mode 100644
index ae96a20ee..000000000
--- a/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/KylinResourceMgr.java
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-package org.apache.ranger.services.kylin.client;
-
-import java.util.List;
-import java.util.Map;
-
-import org.apache.commons.collections.MapUtils;
-import org.apache.commons.lang.StringUtils;
-import org.apache.log4j.Logger;
-import org.apache.ranger.plugin.service.ResourceLookupContext;
-
-public class KylinResourceMgr {
-
-	public static final String PROJECT = "project";
-
-	private static final Logger LOG = Logger.getLogger(KylinResourceMgr.class);
-
-	public static Map<String, Object> validateConfig(String serviceName, Map<String, String> configs) throws Exception {
-		Map<String, Object> ret = null;
-
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("==> KylinResourceMgr.validateConfig ServiceName: " + serviceName + "Configs" + configs);
-		}
-
-		try {
-			ret = KylinClient.connectionTest(serviceName, configs);
-		} catch (Exception e) {
-			LOG.error("<== KylinResourceMgr.validateConfig Error: " + e);
-			throw e;
-		}
-
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("<== KylinResourceMgr.validateConfig Result: " + ret);
-		}
-		return ret;
-	}
-
-	public static List<String> getKylinResources(String serviceName, Map<String, String> configs,
-			ResourceLookupContext context) {
-		String userInput = context.getUserInput();
-		String resource = context.getResourceName();
-		Map<String, List<String>> resourceMap = context.getResources();
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("==> KylinResourceMgr.getKylinResources()  userInput: " + userInput + ", resource: " + resource
-					+ ", resourceMap: " + resourceMap);
-		}
-
-		if (MapUtils.isEmpty(configs)) {
-			LOG.error("Connection Config is empty!");
-			return null;
-		}
-
-		if (StringUtils.isEmpty(userInput)) {
-			LOG.warn("User input is empty, set default value : *");
-			userInput = "*";
-		}
-
-		List<String> projectList = null;
-		if (MapUtils.isNotEmpty(resourceMap)) {
-			projectList = resourceMap.get(PROJECT);
-		}
-
-		final KylinClient kylinClient = KylinClient.getKylinClient(serviceName, configs);
-		if (kylinClient == null) {
-			LOG.error("Failed to getKylinClient!");
-			return null;
-		}
-
-		List<String> resultList = null;
-
-		resultList = kylinClient.getProjectList(userInput, projectList);
-
-		if (LOG.isDebugEnabled()) {
-			LOG.debug("<== KylinResourceMgr.getKylinResources() result: " + resultList);
-		}
-		return resultList;
-	}
-
-}
diff --git a/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/json/model/KylinProjectResponse.java b/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/json/model/KylinProjectResponse.java
deleted file mode 100644
index efed6bc8a..000000000
--- a/plugin-kylin/src/main/java/org/apache/ranger/services/kylin/client/json/model/KylinProjectResponse.java
+++ /dev/null
@@ -1,109 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.ranger.services.kylin.client.json.model;
-
-import java.util.List;
-
-public class KylinProjectResponse {
-	private String uuid;
-
-	private String version;
-
-	private String name;
-
-	private String owner;
-
-	private String status;
-
-	private String description;
-
-	private List<String> tables;
-
-	private List<String> models;
-
-	public String getUuid() {
-		return uuid;
-	}
-
-	public void setUuid(String uuid) {
-		this.uuid = uuid;
-	}
-
-	public String getVersion() {
-		return version;
-	}
-
-	public void setVersion(String version) {
-		this.version = version;
-	}
-
-	public String getName() {
-		return name;
-	}
-
-	public void setName(String name) {
-		this.name = name;
-	}
-
-	public String getOwner() {
-		return owner;
-	}
-
-	public void setOwner(String owner) {
-		this.owner = owner;
-	}
-
-	public String getStatus() {
-		return status;
-	}
-
-	public void setStatus(String status) {
-		this.status = status;
-	}
-
-	public String getDescription() {
-		return description;
-	}
-
-	public void setDescription(String description) {
-		this.description = description;
-	}
-
-	public List<String> getTables() {
-		return tables;
-	}
-
-	public void setTables(List<String> tables) {
-		this.tables = tables;
-	}
-
-	public List<String> getModels() {
-		return models;
-	}
-
-	public void setModels(List<String> models) {
-		this.models = models;
-	}
-
-	@Override
-	public String toString() {
-		return "KylinProjectResponse [uuid=" + uuid + ", version=" + version + ", name=" + name + ", owner=" + owner
-				+ ", status=" + status + ", description=" + description + ", tables=" + tables + ", models=" + models
-				+ "]";
-	}
-}
diff --git a/plugin-kylin/src/test/java/org/apache/ranger/authorization/kylin/authorizer/RangerAdminClientImpl.java b/plugin-kylin/src/test/java/org/apache/ranger/authorization/kylin/authorizer/RangerAdminClientImpl.java
deleted file mode 100644
index bd80e921a..000000000
--- a/plugin-kylin/src/test/java/org/apache/ranger/authorization/kylin/authorizer/RangerAdminClientImpl.java
+++ /dev/null
@@ -1,51 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.ranger.authorization.kylin.authorizer;
-
-import java.io.File;
-import java.nio.charset.Charset;
-import java.nio.file.FileSystems;
-import java.nio.file.Files;
-
-import org.apache.ranger.admin.client.AbstractRangerAdminClient;
-import org.apache.ranger.plugin.util.ServicePolicies;
-
-/**
- * A test implementation of the RangerAdminClient interface that just reads
- * policies in from a file and returns them.
- */
-public class RangerAdminClientImpl extends AbstractRangerAdminClient {
-	private static final String cacheFilename = "kylin-policies.json";
-
-	@Override
-	public ServicePolicies getServicePoliciesIfUpdated(long lastKnownVersion, long lastActivationTimeInMillis)
-			throws Exception {
-
-		String basedir = System.getProperty("basedir");
-		if (basedir == null) {
-			basedir = new File(".").getCanonicalPath();
-		}
-
-		java.nio.file.Path cachePath = FileSystems.getDefault()
-				.getPath(basedir, "/src/test/resources/" + cacheFilename);
-		byte[] cacheBytes = Files.readAllBytes(cachePath);
-
-		return gson.fromJson(new String(cacheBytes, Charset.defaultCharset()), ServicePolicies.class);
-	}
-
-}
diff --git a/plugin-kylin/src/test/java/org/apache/ranger/authorization/kylin/authorizer/RangerKylinAuthorizerTest.java b/plugin-kylin/src/test/java/org/apache/ranger/authorization/kylin/authorizer/RangerKylinAuthorizerTest.java
deleted file mode 100644
index 10f992590..000000000
--- a/plugin-kylin/src/test/java/org/apache/ranger/authorization/kylin/authorizer/RangerKylinAuthorizerTest.java
+++ /dev/null
@@ -1,539 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.ranger.authorization.kylin.authorizer;
-
-import static org.mockito.ArgumentMatchers.anyString;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.when;
-
-import java.util.HashMap;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-
-import org.apache.commons.lang.RandomStringUtils;
-import org.apache.kylin.common.KylinConfig;
-import org.apache.kylin.metadata.project.ProjectInstance;
-import org.apache.kylin.metadata.project.ProjectManager;
-import org.apache.kylin.metadata.project.RealizationEntry;
-import org.apache.kylin.rest.util.AclEvaluate;
-import org.junit.AfterClass;
-import org.junit.Assert;
-import org.junit.BeforeClass;
-import org.junit.FixMethodOrder;
-import org.junit.Ignore;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.MethodSorters;
-import org.mockito.invocation.InvocationOnMock;
-import org.mockito.stubbing.Answer;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.security.authentication.AuthenticationCredentialsNotFoundException;
-import org.springframework.security.test.context.support.WithMockUser;
-import org.springframework.test.context.ContextConfiguration;
-import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
-import org.springframework.test.util.ReflectionTestUtils;
-
-/**
-*
-* Here we plug the Ranger RangerKylinAuthorizer into Kylin.
-*
-* A custom RangerAdminClient is plugged into Ranger in turn, which loads security policies from a local file.
-* These policies were generated in the Ranger Admin UI for a kylin service called "kylinTest":
-*
-* a) A user "kylin" can do all permissions(contains "ADMIN", "MANAGEMENT", "OPERATION", "QUERY")
-* on all kylin projects;
-* b) A user "zhangqiang" can do a "ADMIN" on the project "test_project",
-* and do a "OPERATION" on the project "kylin_project";
-* c) A user "yuwen" can do a "ADMIN" on the project "test_project",
-* and do a "OPERATION" on the project "kylin_project";
-* d) A user "admin" has role "ROLE_ADMIN",
-* and the others have role "ROLE_USER" by mock for test.
-*
-*/
-@Ignore
-@RunWith(SpringJUnit4ClassRunner.class)
-@ContextConfiguration(locations = { "classpath*:applicationContext.xml", "classpath*:kylinSecurity.xml" })
-@FixMethodOrder(MethodSorters.NAME_ASCENDING)
-public class RangerKylinAuthorizerTest {
-	private static final Map<String, ProjectInstance> uuid2Projects = new HashMap<>();
-
-	private static final Map<String, ProjectInstance> name2Projects = new HashMap<>();
-
-	private static final String ADMIN = "admin";
-
-	private static final String KYLIN = "kylin";
-
-	private static final String ZHANGQIANG = "zhangqiang";
-
-	private static final String YUWEN = "yuwen";
-
-	private static final String LEARN_PROJECT = "learn_project";
-
-	private static final String TEST_PROJECT = "test_project";
-
-	private static final String KYLIN_PROJECT = "kylin_project";
-
-	private static final String[] PROJECTNAMES = new String[] { LEARN_PROJECT, TEST_PROJECT, KYLIN_PROJECT };
-
-	private static final String ROLE_ADMIN = "ADMIN";
-
-	private static final String ROLE_USER = "USER";
-
-	@Autowired
-	private AclEvaluate aclEvaluate;
-
-	@BeforeClass
-	public static void setup() throws Exception {
-		// set kylin conf path
-		System.setProperty(KylinConfig.KYLIN_CONF, "src/test/resources");
-
-		// init kylin projects
-		initKylinProjects();
-
-		// mock kylin projects, to match projectUuid and projectName for kylin
-		mockKylinProjects();
-	}
-
-	@AfterClass
-	public static void cleanup() throws Exception {
-		// do nothing
-	}
-
-	/**
-	 * Help function: init kylin projects
-	 */
-	private static void initKylinProjects() {
-		for (String projectName : PROJECTNAMES) {
-			ProjectInstance projectInstance = getProjectInstance(projectName);
-			name2Projects.put(projectName, projectInstance);
-
-			uuid2Projects.put(projectInstance.getUuid(), projectInstance);
-		}
-	}
-
-	/**
-	 * Help function: mock kylin projects, to match projectUuid and projectName
-	 */
-	private static void mockKylinProjects() {
-		KylinConfig kylinConfig = KylinConfig.getInstanceFromEnv();
-		ProjectManager projectManager = mock(ProjectManager.class);
-
-		@SuppressWarnings({ "rawtypes", "unchecked" })
-		Map<Class, Object> managersCache = (Map<Class, Object>) ReflectionTestUtils.getField(kylinConfig,
-				"managersCache");
-		managersCache.put(ProjectManager.class, projectManager);
-
-		Answer<ProjectInstance> answer = new Answer<ProjectInstance>() {
-			@Override
-			public ProjectInstance answer(InvocationOnMock invocation) throws Throwable {
-				Object[] args = invocation.getArguments();
-				if (args == null || args.length == 0) {
-					return null;
-				}
-				String uuid = (String) args[0];
-				return uuid2Projects.get(uuid);
-			}
-		};
-		when(projectManager.getPrjByUuid(anyString())).thenAnswer(answer);
-	}
-
-	/**
-	 * Help function: get random project instance for test
-	 */
-	private static ProjectInstance getRandomProjectInstance() {
-		String name = RandomStringUtils.randomAlphanumeric(10) + "-project";
-		return getProjectInstance(name);
-	}
-
-	/**
-	 * Help function: get specific project instance for test
-	 */
-	private static ProjectInstance getProjectInstance(String name) {
-		String owner = null;
-		String description = null;
-		LinkedHashMap<String, String> overrideProps = null;
-		List<RealizationEntry> realizationEntries = null;
-		List<String> models = null;
-
-		return ProjectInstance.create(name, owner, description, overrideProps, realizationEntries, models);
-	}
-
-	// No.1 hasProjectReadPermission test start
-	/**
-	 * no credentials read any project failed
-	 */
-	@Test(expected = AuthenticationCredentialsNotFoundException.class)
-	public void readProjectAnyWithoutCredentials() {
-		ProjectInstance project = getRandomProjectInstance();
-		aclEvaluate.hasProjectReadPermission(project);
-	}
-
-	/**
-	 * admin read all projects sueecss
-	 */
-	@Test
-	@WithMockUser(username = ADMIN, roles = { ROLE_ADMIN })
-	public void readProjectAllAsRoleAdmin() {
-		for (ProjectInstance project : uuid2Projects.values()) {
-			boolean result = aclEvaluate.hasProjectReadPermission(project);
-			Assert.assertTrue(result);
-		}
-	}
-
-	/**
-	 * kylin read all projects success
-	 */
-	@Test
-	@WithMockUser(username = KYLIN, roles = { ROLE_USER })
-	public void readProjectAllWithAdminPermission() {
-		for (ProjectInstance project : uuid2Projects.values()) {
-			boolean result = aclEvaluate.hasProjectReadPermission(project);
-			Assert.assertTrue(result);
-		}
-	}
-
-	/**
-	 * zhangqiang read test_project success
-	 */
-	@Test
-	@WithMockUser(username = ZHANGQIANG, roles = { ROLE_USER })
-	public void readProjectTestWithAdminPermission() {
-		ProjectInstance project = name2Projects.get(TEST_PROJECT);
-		boolean result = aclEvaluate.hasProjectReadPermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * zhangqiang read kylin_project success
-	 */
-	@Test
-	@WithMockUser(username = ZHANGQIANG, roles = { ROLE_USER })
-	public void readProjectKylinWithOperationPermission() {
-		ProjectInstance project = name2Projects.get(KYLIN_PROJECT);
-		boolean result = aclEvaluate.hasProjectReadPermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * yuwen read test_project success
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void readProjectTestWithManagementPermission() {
-		ProjectInstance project = name2Projects.get(TEST_PROJECT);
-		boolean result = aclEvaluate.hasProjectReadPermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * yuwen read kylin_project success
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void readProjectKylinWithQueryPermission() {
-		ProjectInstance project = name2Projects.get(KYLIN_PROJECT);
-		boolean result = aclEvaluate.hasProjectReadPermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * yuwen read learn_project failed
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void readProjectLearnWithoutPermission() {
-		ProjectInstance project = name2Projects.get(LEARN_PROJECT);
-		boolean result = aclEvaluate.hasProjectReadPermission(project);
-		Assert.assertFalse(result);
-	}
-
-	// No.1 hasProjectReadPermission test end
-
-	// No.2 hasProjectOperationPermission test start
-	/**
-	 * no credentials operation any project failed
-	 */
-	@Test(expected = AuthenticationCredentialsNotFoundException.class)
-	public void operationProjectAnyWithoutCredentials() {
-		ProjectInstance project = getRandomProjectInstance();
-		aclEvaluate.hasProjectOperationPermission(project);
-	}
-
-	/**
-	 * admin operation all projects sueecss
-	 */
-	@Test
-	@WithMockUser(username = ADMIN, roles = { ROLE_ADMIN })
-	public void operationProjectAllAsRoleAdmin() {
-		for (ProjectInstance project : uuid2Projects.values()) {
-			boolean result = aclEvaluate.hasProjectOperationPermission(project);
-			Assert.assertTrue(result);
-		}
-	}
-
-	/**
-	 * kylin operation all projects success
-	 */
-	@Test
-	@WithMockUser(username = KYLIN, roles = { ROLE_USER })
-	public void operationProjectAllWithAdminPermission() {
-		for (ProjectInstance project : uuid2Projects.values()) {
-			boolean result = aclEvaluate.hasProjectOperationPermission(project);
-			Assert.assertTrue(result);
-		}
-	}
-
-	/**
-	 * zhangqiang operation test_project success
-	 */
-	@Test
-	@WithMockUser(username = ZHANGQIANG, roles = { ROLE_USER })
-	public void operationProjectTestWithAdminPermission() {
-		ProjectInstance project = name2Projects.get(TEST_PROJECT);
-		boolean result = aclEvaluate.hasProjectOperationPermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * zhangqiang operation kylin_project success
-	 */
-	@Test
-	@WithMockUser(username = ZHANGQIANG, roles = { ROLE_USER })
-	public void operationProjectKylinWithOperationPermission() {
-		ProjectInstance project = name2Projects.get(KYLIN_PROJECT);
-		boolean result = aclEvaluate.hasProjectOperationPermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * yuwen operation test_project success
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void operationProjectTestWithManagementPermission() {
-		ProjectInstance project = name2Projects.get(TEST_PROJECT);
-		boolean result = aclEvaluate.hasProjectOperationPermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * yuwen operation kylin_project failed
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void operationProjectKylinWithoutPermission() {
-		ProjectInstance project = name2Projects.get(KYLIN_PROJECT);
-		boolean result = aclEvaluate.hasProjectOperationPermission(project);
-		Assert.assertFalse(result);
-	}
-
-	/**
-	 * yuwen operation learn_project failed
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void operationProjectLearnWithoutPermission() {
-		ProjectInstance project = name2Projects.get(LEARN_PROJECT);
-		boolean result = aclEvaluate.hasProjectOperationPermission(project);
-		Assert.assertFalse(result);
-	}
-
-	// No.2 hasProjectOperationPermission test end
-
-	// No.3 hasProjectWritePermission test start
-	/**
-	 * no credentials write any project failed
-	 */
-	@Test(expected = AuthenticationCredentialsNotFoundException.class)
-	public void writeProjectAnyWithoutCredentials() {
-		ProjectInstance project = getRandomProjectInstance();
-		aclEvaluate.hasProjectWritePermission(project);
-	}
-
-	/**
-	 * admin write all projects sueecss
-	 */
-	@Test
-	@WithMockUser(username = ADMIN, roles = { ROLE_ADMIN })
-	public void writeProjectAllAsRoleAdmin() {
-		for (ProjectInstance project : uuid2Projects.values()) {
-			boolean result = aclEvaluate.hasProjectWritePermission(project);
-			Assert.assertTrue(result);
-		}
-	}
-
-	/**
-	 * kylin write all projects success
-	 */
-	@Test
-	@WithMockUser(username = KYLIN, roles = { ROLE_USER })
-	public void writeProjectAllWithAdminPermission() {
-		for (ProjectInstance project : uuid2Projects.values()) {
-			boolean result = aclEvaluate.hasProjectWritePermission(project);
-			Assert.assertTrue(result);
-		}
-	}
-
-	/**
-	 * zhangqiang write test_project success
-	 */
-	@Test
-	@WithMockUser(username = ZHANGQIANG, roles = { ROLE_USER })
-	public void writeProjectTestWithAdminPermission() {
-		ProjectInstance project = name2Projects.get(TEST_PROJECT);
-		boolean result = aclEvaluate.hasProjectWritePermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * zhangqiang write kylin_project failed
-	 */
-	@Test
-	@WithMockUser(username = ZHANGQIANG, roles = { ROLE_USER })
-	public void writeProjectKylinWithoutPermission() {
-		ProjectInstance project = name2Projects.get(KYLIN_PROJECT);
-		boolean result = aclEvaluate.hasProjectWritePermission(project);
-		Assert.assertFalse(result);
-	}
-
-	/**
-	 * yuwen write test_project success
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void writeProjectTestWithManagementPermission() {
-		ProjectInstance project = name2Projects.get(TEST_PROJECT);
-		boolean result = aclEvaluate.hasProjectWritePermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * yuwen write kylin_project failed
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void writeProjectKylinWithoutPermission2() {
-		ProjectInstance project = name2Projects.get(KYLIN_PROJECT);
-		boolean result = aclEvaluate.hasProjectWritePermission(project);
-		Assert.assertFalse(result);
-	}
-
-	/**
-	 * yuwen write learn_project failed
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void writeProjectLearnWithoutPermission() {
-		ProjectInstance project = name2Projects.get(LEARN_PROJECT);
-		boolean result = aclEvaluate.hasProjectWritePermission(project);
-		Assert.assertFalse(result);
-	}
-
-	// No.3 hasProjectWritePermission test end
-
-	// No.4 hasProjectAdminPermission test start
-	/**
-	 * no credentials admin any project failed
-	 */
-	@Test(expected = AuthenticationCredentialsNotFoundException.class)
-	public void adminProjectAnyWithoutCredentials() {
-		ProjectInstance project = getRandomProjectInstance();
-		aclEvaluate.hasProjectAdminPermission(project);
-	}
-
-	/**
-	 * admin admin all projects sueecss
-	 */
-	@Test
-	@WithMockUser(username = ADMIN, roles = { ROLE_ADMIN })
-	public void adminProjectAllAsRoleAdmin() {
-		for (ProjectInstance project : uuid2Projects.values()) {
-			boolean result = aclEvaluate.hasProjectAdminPermission(project);
-			Assert.assertTrue(result);
-		}
-	}
-
-	/**
-	 * kylin admin all projects success
-	 */
-	@Test
-	@WithMockUser(username = KYLIN, roles = { ROLE_USER })
-	public void adminProjectAllWithAdminPermission() {
-		for (ProjectInstance project : uuid2Projects.values()) {
-			boolean result = aclEvaluate.hasProjectAdminPermission(project);
-			Assert.assertTrue(result);
-		}
-	}
-
-	/**
-	 * zhangqiang admin test_project success
-	 */
-	@Test
-	@WithMockUser(username = ZHANGQIANG, roles = { ROLE_USER })
-	public void adminProjectTestWithAdminPermission() {
-		ProjectInstance project = name2Projects.get(TEST_PROJECT);
-		boolean result = aclEvaluate.hasProjectAdminPermission(project);
-		Assert.assertTrue(result);
-	}
-
-	/**
-	 * zhangqiang admin kylin_project failed
-	 */
-	@Test
-	@WithMockUser(username = ZHANGQIANG, roles = { ROLE_USER })
-	public void adminProjectKylinWithoutPermission() {
-		ProjectInstance project = name2Projects.get(KYLIN_PROJECT);
-		boolean result = aclEvaluate.hasProjectAdminPermission(project);
-		Assert.assertFalse(result);
-	}
-
-	/**
-	 * yuwen admin test_project failed
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void adminProjectTestWithoutPermission() {
-		ProjectInstance project = name2Projects.get(TEST_PROJECT);
-		boolean result = aclEvaluate.hasProjectAdminPermission(project);
-		Assert.assertFalse(result);
-	}
-
-	/**
-	 * yuwen admin kylin_project failed
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void adminProjectKylinWithoutPermission2() {
-		ProjectInstance project = name2Projects.get(KYLIN_PROJECT);
-		boolean result = aclEvaluate.hasProjectAdminPermission(project);
-		Assert.assertFalse(result);
-	}
-
-	/**
-	 * yuwen admin learn_project failed
-	 */
-	@Test
-	@WithMockUser(username = YUWEN, roles = { ROLE_USER })
-	public void adminProjectLearnWithoutPermission() {
-		ProjectInstance project = name2Projects.get(LEARN_PROJECT);
-		boolean result = aclEvaluate.hasProjectAdminPermission(project);
-		Assert.assertFalse(result);
-	}
-	// No.4 hasProjectAdminPermission test end
-}
diff --git a/plugin-kylin/src/test/resources/applicationContext.xml b/plugin-kylin/src/test/resources/applicationContext.xml
deleted file mode 100644
index e4ce60bb1..000000000
--- a/plugin-kylin/src/test/resources/applicationContext.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:context="http://www.springframework.org/schema/context"
-       xmlns:mvc="http://www.springframework.org/schema/mvc"
-       xmlns:task="http://www.springframework.org/schema/task"
-       xmlns:aop="http://www.springframework.org/schema/aop"
-       xmlns:cache="http://www.springframework.org/schema/cache"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
-    http://www.springframework.org/schema/context
-    http://www.springframework.org/schema/context/spring-context-4.3.xsd
-    http://www.springframework.org/schema/task
-    http://www.springframework.org/schema/task/spring-task-4.3.xsd
-    http://www.springframework.org/schema/mvc
-    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
-    http://www.springframework.org/schema/aop
-    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
-    http://www.springframework.org/schema/cache
-    http://www.springframework.org/schema/cache/spring-cache.xsd">
-
-    <description>UT test for kylin security service</description>
-
-    <context:annotation-config/>
-    <mvc:annotation-driven/>
-    <aop:aspectj-autoproxy/>
-
-    <context:component-scan base-package="org.apache.kylin.rest"
-        use-default-filters="false">
-        <context:include-filter type="assignable"
-            expression="org.apache.kylin.rest.util.AclEvaluate"/>
-        <context:include-filter type="assignable"
-            expression="org.apache.kylin.rest.util.AclUtil"/>
-    </context:component-scan>
-
-</beans>
\ No newline at end of file
diff --git a/plugin-kylin/src/test/resources/kylin-policies.json b/plugin-kylin/src/test/resources/kylin-policies.json
deleted file mode 100644
index 300982786..000000000
--- a/plugin-kylin/src/test/resources/kylin-policies.json
+++ /dev/null
@@ -1,281 +0,0 @@
-{
-  "serviceName": "kylinTest",
-  "serviceId": 2,
-  "policyVersion": 8,
-  "policyUpdateTime": "20171208-11:03:31.000-+0800",
-  "policies": [
-    {
-      "service": "kylinTest",
-      "name": "all - project",
-      "policyType": 0,
-      "description": "Policy for all - project",
-      "isAuditEnabled": true,
-      "resources": {
-        "project": {
-          "values": [
-            "*"
-          ],
-          "isExcludes": false,
-          "isRecursive": false
-        }
-      },
-      "policyItems": [
-        {
-          "accesses": [
-            {
-              "type": "QUERY",
-              "isAllowed": true
-            },
-            {
-              "type": "OPERATION",
-              "isAllowed": true
-            },
-            {
-              "type": "MANAGEMENT",
-              "isAllowed": true
-            },
-            {
-              "type": "ADMIN",
-              "isAllowed": true
-            }
-          ],
-          "users": [
-            "kylin"
-          ],
-          "groups": [],
-          "conditions": [],
-          "delegateAdmin": false
-        }
-      ],
-      "denyPolicyItems": [],
-      "allowExceptions": [],
-      "denyExceptions": [],
-      "dataMaskPolicyItems": [],
-      "rowFilterPolicyItems": [],
-      "id": 4,
-      "guid": "a38ec5dc-a788-48f2-87d1-c522ea8f996e",
-      "isEnabled": true,
-      "version": 2
-    },
-    {
-      "service": "kylinTest",
-      "name": "accessTestProject",
-      "policyType": 0,
-      "description": "",
-      "isAuditEnabled": true,
-      "resources": {
-        "project": {
-          "values": [
-            "test_project"
-          ],
-          "isExcludes": false,
-          "isRecursive": false
-        }
-      },
-      "policyItems": [
-        {
-          "accesses": [
-            {
-              "type": "ADMIN",
-              "isAllowed": true
-            }
-          ],
-          "users": [
-            "zhangqiang"
-          ],
-          "groups": [],
-          "conditions": [],
-          "delegateAdmin": false
-        },
-        {
-          "accesses": [
-            {
-              "type": "MANAGEMENT",
-              "isAllowed": true
-            }
-          ],
-          "users": [
-            "yuwen"
-          ],
-          "groups": [],
-          "conditions": [],
-          "delegateAdmin": false
-        }
-      ],
-      "denyPolicyItems": [],
-      "allowExceptions": [],
-      "denyExceptions": [],
-      "dataMaskPolicyItems": [],
-      "rowFilterPolicyItems": [],
-      "id": 5,
-      "guid": "072bdf13-6af0-45dd-8670-003e88ae2e54",
-      "isEnabled": true,
-      "version": 3
-    },
-    {
-      "service": "kylinTest",
-      "name": "accessKylinProject",
-      "policyType": 0,
-      "description": "",
-      "isAuditEnabled": true,
-      "resources": {
-        "project": {
-          "values": [
-            "kylin_project"
-          ],
-          "isExcludes": false,
-          "isRecursive": false
-        }
-      },
-      "policyItems": [
-        {
-          "accesses": [
-            {
-              "type": "OPERATION",
-              "isAllowed": true
-            }
-          ],
-          "users": [
-            "zhangqiang"
-          ],
-          "groups": [],
-          "conditions": [],
-          "delegateAdmin": false
-        },
-        {
-          "accesses": [
-            {
-              "type": "QUERY",
-              "isAllowed": true
-            }
-          ],
-          "users": [
-            "yuwen"
-          ],
-          "groups": [],
-          "conditions": [],
-          "delegateAdmin": false
-        }
-      ],
-      "denyPolicyItems": [],
-      "allowExceptions": [],
-      "denyExceptions": [],
-      "dataMaskPolicyItems": [],
-      "rowFilterPolicyItems": [],
-      "id": 6,
-      "guid": "9974c4bd-4c99-4eb1-b626-1d037c2c8567",
-      "isEnabled": true,
-      "version": 2
-    }
-  ],
-  "serviceDef": {
-    "name": "kylin",
-    "implClass": "org.apache.ranger.services.kylin.RangerServiceKylin",
-    "label": "KYLIN",
-    "description": "KYLIN",
-    "options": {
-      "enableDenyAndExceptionsInPolicies": "false"
-    },
-    "configs": [
-      {
-        "itemId": 1,
-        "name": "username",
-        "type": "string",
-        "mandatory": true,
-        "validationRegEx": "",
-        "validationMessage": "",
-        "uiHint": "",
-        "label": "Username"
-      },
-      {
-        "itemId": 2,
-        "name": "password",
-        "type": "password",
-        "mandatory": true,
-        "validationRegEx": "",
-        "validationMessage": "",
-        "uiHint": "",
-        "label": "Password"
-      },
-      {
-        "itemId": 3,
-        "name": "kylin.url",
-        "type": "string",
-        "mandatory": true,
-        "defaultValue": "",
-        "validationRegEx": "",
-        "validationMessage": "",
-        "uiHint": "{\"TextFieldWithIcon\":true, \"info\": \"eg. \u0027http://\u0026lt;ipaddr\u0026gt;:7070\u0027\"}",
-        "label": "Kylin URL"
-      }
-    ],
-    "resources": [
-      {
-        "itemId": 1,
-        "name": "project",
-        "type": "string",
-        "level": 10,
-        "mandatory": true,
-        "lookupSupported": true,
-        "recursiveSupported": false,
-        "excludesSupported": false,
-        "matcher": "org.apache.ranger.plugin.resourcematcher.RangerDefaultResourceMatcher",
-        "matcherOptions": {
-          "wildCard": "true",
-          "ignoreCase": "true"
-        },
-        "validationRegEx": "",
-        "validationMessage": "",
-        "uiHint": "",
-        "label": "Kylin Project",
-        "description": "Kylin Project",
-        "accessTypeRestrictions": []
-      }
-    ],
-    "accessTypes": [
-      {
-        "itemId": 1,
-        "name": "QUERY",
-        "label": "QUERY",
-        "impliedGrants": []
-      },
-      {
-        "itemId": 2,
-        "name": "OPERATION",
-        "label": "OPERATION",
-        "impliedGrants": []
-      },
-      {
-        "itemId": 3,
-        "name": "MANAGEMENT",
-        "label": "MANAGEMENT",
-        "impliedGrants": []
-      },
-      {
-        "itemId": 4,
-        "name": "ADMIN",
-        "label": "ADMIN",
-        "impliedGrants": []
-      }
-    ],
-    "policyConditions": [],
-    "contextEnrichers": [],
-    "enums": [],
-    "dataMaskDef": {
-      "maskTypes": [],
-      "accessTypes": [],
-      "resources": []
-    },
-    "rowFilterDef": {
-      "accessTypes": [],
-      "resources": []
-    },
-    "id": 12,
-    "guid": "88ab8471-3e27-40c2-8bd8-458b5b1a9b25",
-    "isEnabled": true,
-    "createTime": "20171128-09:52:41.000-+0800",
-    "updateTime": "20171128-09:52:41.000-+0800",
-    "version": 1
-  },
-  "auditMode": "audit-default"
-}
\ No newline at end of file
diff --git a/plugin-kylin/src/test/resources/kylin.properties b/plugin-kylin/src/test/resources/kylin.properties
deleted file mode 100644
index 9f26bd9c5..000000000
--- a/plugin-kylin/src/test/resources/kylin.properties
+++ /dev/null
@@ -1,21 +0,0 @@
-#
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#    http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-
-#
-# Authorization configuration
-#
-kylin.server.external-acl-provider=org.apache.ranger.authorization.kylin.authorizer.RangerKylinAuthorizer
\ No newline at end of file
diff --git a/plugin-kylin/src/test/resources/kylinSecurity.xml b/plugin-kylin/src/test/resources/kylinSecurity.xml
deleted file mode 100644
index 4d6eacde8..000000000
--- a/plugin-kylin/src/test/resources/kylinSecurity.xml
+++ /dev/null
@@ -1,77 +0,0 @@
-<!--
-  Licensed under the Apache License, Version 2.0 (the "License");
-  you may not use this file except in compliance with the License.
-  You may obtain a copy of the License at
-
-    http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License. See accompanying LICENSE file.
--->
-
-<beans xmlns="http://www.springframework.org/schema/beans"
-    xmlns:scr="http://www.springframework.org/schema/security"
-    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-    xmlns:context="http://www.springframework.org/schema/context"
-    xmlns:util="http://www.springframework.org/schema/util"
-    xsi:schemaLocation="http://www.springframework.org/schema/beans
-	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
-	http://www.springframework.org/schema/security
-	http://www.springframework.org/schema/security/spring-security.xsd
-	http://www.springframework.org/schema/util
-	http://www.springframework.org/schema/util/spring-util-4.3.xsd
-    http://www.springframework.org/schema/context
-    http://www.springframework.org/schema/context/spring-context.xsd">
-
-    <scr:global-method-security pre-post-annotations="enabled">
-        <scr:expression-handler ref="expressionHandler"/>
-    </scr:global-method-security>
-
-    <!-- acl config -->
-    <bean id="aclPermissionFactory" class="org.apache.kylin.rest.security.AclPermissionFactory"/>
-
-    <bean id="expressionHandler"
-        class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
-        <property name="permissionEvaluator" ref="permissionEvaluator"/>
-    </bean>
-
-    <bean id="permissionEvaluator"
-        class="org.apache.kylin.rest.security.KylinAclPermissionEvaluator">
-        <constructor-arg type="org.apache.kylin.rest.service.AclService">
-            <null/>
-        </constructor-arg>
-        <constructor-arg ref="aclPermissionFactory"/>
-    </bean>
-
-    <bean id="aclAuthorizationStrategy"
-        class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
-        <constructor-arg>
-            <list>
-                <bean
-                    class="org.springframework.security.core.authority.SimpleGrantedAuthority">
-                    <constructor-arg value="ROLE_ADMIN"/>
-                </bean>
-                <bean
-                    class="org.springframework.security.core.authority.SimpleGrantedAuthority">
-                    <constructor-arg value="ROLE_ADMIN"/>
-                </bean>
-                <bean
-                    class="org.springframework.security.core.authority.SimpleGrantedAuthority">
-                    <constructor-arg value="ROLE_ADMIN"/>
-                </bean>
-            </list>
-        </constructor-arg>
-    </bean>
-
-    <bean id="auditLogger"
-        class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
-
-    <bean id="permissionGrantingStrategy"
-        class="org.springframework.security.acls.domain.DefaultPermissionGrantingStrategy">
-        <constructor-arg ref="auditLogger"/>
-    </bean>
-
-</beans>
\ No newline at end of file
diff --git a/plugin-kylin/src/test/resources/log4j.properties b/plugin-kylin/src/test/resources/log4j.properties
deleted file mode 100644
index f7ab2bad5..000000000
--- a/plugin-kylin/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,34 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-##-- To prevent junits from cluttering the build run by default all test runs send output to null appender
-log4j.appender.devnull=org.apache.log4j.varia.NullAppender
-ranger.root.logger=FATAL,devnull
-
-##-- uncomment the following line during during development/debugging so see debug messages during test run to be emitted to console
-# ranger.root.logger=DEBUG,console
-log4j.rootLogger=${ranger.root.logger}
-
-# Logging Threshold
-log4j.threshold=ALL
-
-#
-# console
-# Add "console" to rootlogger above if you want to use this
-#
-log4j.appender.console=org.apache.log4j.ConsoleAppender
-log4j.appender.console.target=System.err
-log4j.appender.console.layout=org.apache.log4j.PatternLayout
-log4j.appender.console.layout.ConversionPattern=%d{ISO8601} %-5p [%t] %c{2}: %m%n
diff --git a/plugin-kylin/src/test/resources/ranger-kylin-security.xml b/plugin-kylin/src/test/resources/ranger-kylin-security.xml
deleted file mode 100644
index e8609f946..000000000
--- a/plugin-kylin/src/test/resources/ranger-kylin-security.xml
+++ /dev/null
@@ -1,60 +0,0 @@
-<?xml version="1.0"?>
-<!--
-  Licensed to the Apache Software Foundation (ASF) under one or more
-  contributor license agreements.  See the NOTICE file distributed with
-  this work for additional information regarding copyright ownership.
-  The ASF licenses this file to You under the Apache License, Version 2.0
-  (the "License"); you may not use this file except in compliance with
-  the License.  You may obtain a copy of the License at
-
-      http://www.apache.org/licenses/LICENSE-2.0
-
-  Unless required by applicable law or agreed to in writing, software
-  distributed under the License is distributed on an "AS IS" BASIS,
-  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  See the License for the specific language governing permissions and
-  limitations under the License.
--->
-<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
-<configuration xmlns:xi="http://www.w3.org/2001/XInclude">
-	<property>
-		<name>ranger.plugin.kylin.policy.rest.url</name>
-		<value>http://localhost:6080</value>
-		<description>
-			URL to Ranger Admin
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.service.name</name>
-		<value>kylinTest</value>
-		<description>
-			Name of the Ranger service containing policies for this SampleApp instance
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.source.impl</name>
-		<value>org.apache.ranger.authorization.kylin.authorizer.RangerAdminClientImpl</value>
-		<description>
-			Policy source.
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.pollIntervalMs</name>
-		<value>30000</value>
-		<description>
-			How often to poll for changes in policies?
-		</description>
-	</property>
-
-	<property>
-		<name>ranger.plugin.kylin.policy.cache.dir</name>
-		<value>./target</value>
-		<description>
-			Directory where Ranger policies are cached after successful retrieval from the source
-		</description>
-	</property>
-
-</configuration>
diff --git a/pom.xml b/pom.xml
index 0077db423..593e4e581 100644
--- a/pom.xml
+++ b/pom.xml
@@ -272,7 +272,6 @@
                 <module>ranger-tools</module>
                 <module>plugin-sqoop</module>
                 <module>ranger-sqoop-plugin-shim</module>
-                <module>plugin-kylin</module>
                 <module>ranger-kylin-plugin-shim</module>
                 <module>plugin-elasticsearch</module>
                 <module>ranger-elasticsearch-plugin-shim</module>
@@ -413,7 +412,6 @@
                 <module>credentialbuilder</module>
                 <module>ranger-plugin-classloader</module>
                 <module>ranger-util</module>
-                <module>plugin-kylin</module>
                 <module>ranger-kylin-plugin-shim</module>
             </modules>
         </profile>
@@ -479,7 +477,6 @@
                 <module>ranger-tools</module>
                 <module>plugin-sqoop</module>
                 <module>ranger-sqoop-plugin-shim</module>
-                <module>plugin-kylin</module>
                 <module>ranger-kylin-plugin-shim</module>
                 <module>ranger-presto-plugin-shim</module>
                 <module>plugin-elasticsearch</module>
@@ -554,7 +551,6 @@
                 <module>ranger-tools</module>
                 <module>plugin-sqoop</module>
                 <module>ranger-sqoop-plugin-shim</module>
-                <module>plugin-kylin</module>
                 <module>ranger-kylin-plugin-shim</module>
                 <module>plugin-elasticsearch</module>
                 <module>ranger-elasticsearch-plugin-shim</module>
